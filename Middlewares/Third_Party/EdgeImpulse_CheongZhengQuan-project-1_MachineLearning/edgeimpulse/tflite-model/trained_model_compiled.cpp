/* Generated by Edge Impulse
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
// Generated on: 07.06.2021 08:36:44

#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/kernels/micro_ops.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#endif

namespace {

constexpr int kTensorArenaSize = 92672;

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_CONV_2D, OP_MAX_POOL_2D, OP_RESHAPE, OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

TfLiteContext ctx{};
TfLiteTensor tflTensors[15];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[7];

const TfArray<4, int> tensor_dimension0 = { 4, { 1,48,48,3 } };
const TfArray<1, float> quant0_scale = { 1, { 0.0039215688593685627, } };
const TfArray<1, int> quant0_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const ALIGN(8) int32_t tensor_data1[2] = { -1, 2304, };
const TfArray<1, int> tensor_dimension1 = { 1, { 2 } };
const ALIGN(8) int32_t tensor_data2[32] = { 7066, 1933, 13581, 3823, -1272, 3023, 5564, -2637, 4652, -5410, 0, -2198, 3297, -1354, 4304, 3979, -1926, 9312, 4969, -4085, 7947, -4272, 11767, 2923, 8435, 2735, 2802, 5778, 13984, 2501, -9522, 1792, };
const TfArray<1, int> tensor_dimension2 = { 1, { 32 } };
const TfArray<32, float> quant2_scale = { 32, { 4.8170695663429797e-06, 5.265111212793272e-06, 4.6032409954932518e-06, 4.9151117309520487e-06, 5.529934696824057e-06, 4.7923008423822466e-06, 4.9878608479048125e-06, 5.6079402384057175e-06, 5.0146541070716921e-06, 5.0175899559690151e-06, 4.0647983041708358e-06, 4.6872369239281397e-06, 5.4536212701350451e-06, 5.3712992666987702e-06, 6.1367136368062347e-06, 4.7186445044644643e-06, 4.6599561756011099e-06, 5.6262510952365119e-06, 4.8765123210614547e-06, 5.6413528000121005e-06, 5.5957402764761355e-06, 4.9595223572396208e-06, 4.709986114903586e-06, 5.2373311518749688e-06, 4.553955022856826e-06, 4.6220120566431433e-06, 5.3099820433999412e-06, 5.3065282372699585e-06, 4.8367005547333974e-06, 5.1632196118589491e-06, 5.6206135923275724e-06, 6.1079017541487701e-06, } };
const TfArray<32, int> quant2_zero = { 32, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant2 = { (TfLiteFloatArray*)&quant2_scale, (TfLiteIntArray*)&quant2_zero, 0 };
const ALIGN(8) int32_t tensor_data3[16] = { 1495, -1142, 1927, -1187, 1025, -2433, 348, 1970, 436, 3211, 2072, 3066, -2153, 3502, 966, 3804, };
const TfArray<1, int> tensor_dimension3 = { 1, { 16 } };
const TfArray<16, float> quant3_scale = { 16, { 8.9901568571804091e-06, 9.736276297189761e-06, 9.8672844615066424e-06, 9.773505553312134e-06, 1.0234582987322938e-05, 9.4065881057758816e-06, 9.8346799859427847e-06, 1.0567103345238138e-05, 9.2018408395233564e-06, 9.8199079729965888e-06, 1.0872638995351736e-05, 1.0042662324849516e-05, 1.008626350085251e-05, 1.1368734703864902e-05, 1.0617975021887105e-05, 1.0884655239351559e-05, } };
const TfArray<16, int> quant3_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const ALIGN(8) int32_t tensor_data4[5] = { -685, 643, 113, 184, 287, };
const TfArray<1, int> tensor_dimension4 = { 1, { 5 } };
const TfArray<1, float> quant4_scale = { 1, { 2.5314684535260312e-05, } };
const TfArray<1, int> quant4_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const ALIGN(8) int8_t tensor_data5[5*2304] = { 
  -4, 17, -27, -18, -31, 41, 0, -21, 17, -16, -39, -1, 13, -31, -55, -17, -19, 38, -43, -8, 8, -13, 12, -2, 7, -7, -21, -51, 8, -73, -7, -48, -8, 51, -22, -13, -57, 29, 36, 36, -5, 8, -8, -27, -17, -99, -6, -60, 17, 27, -1, -50, -17, 15, 33, 22, 17, -14, -53, 22, -14, -47, 8, -59, 4, 48, -36, -5, -15, -15, -17, 31, -24, -2, 6, 6, 13, -54, -42, -71, 28, 47, -14, 8, 9, 27, 34, 32, -18, -45, -45, 26, 9, -83, -31, -67, 5, 44, 7, 5, -19, 28, -1, 42, -33, 6, 6, 1, 42, -82, 9, -43, -19, 18, -2, -53, -5, -1, -15, -11, -6, 26, 19, -29, 34, -81, 13, -22, -1, 20, -45, -2, -10, 26, -7, -14, -35, -28, -54, 43, 12, -57, -41, 23, 2, 23, -6, -33, 6, -1, -20, 5, 28, 9, -18, 14, 23, -51, 1, -20, 47, 29, 3, -2, 0, -16, 6, 36, -4, -3, -50, -29, -4, -102, -30, -22, 22, 42, -31, 9, -4, 30, 12, 18, 36, 22, 9, -11, 41, -35, -49, 13, -29, 56, 23, 9, -33, 40, -3, -58, -2, -26, -48, 1, -9, -8, 8, -15, -29, 32, -23, -9, -38, 35, 16, 5, 16, -45, -15, -4, -16, -60, -35, -57, 5, 43, -31, -4, -17, -11, 22, -16, 5, -37, 26, -45, 9, -57, -22, -14, 42, 24, 4, -9, 8, 40, 24, -36, -19, -3, -38, 26, -27, -104, -13, -57, -15, -7, -46, -17, -59, -9, -35, -50, -7, -30, 21, 16, 1, -77, -22, -33, 10, -12, -15, -34, 10, 20, -9, -38, 3, 26, 27, 6, 0, -91, 17, -9, -11, 43, -42, 12, 15, 12, 20, 11, -43, 16, -22, 2, -2, -47, -34, 23, 28, 28, -2, 1, -49, 30, 38, -22, 18, 44, -39, -17, -30, -77, 19, -12, 4, 5, -17, -41, -55, 39, 38, -24, 8, -6, -12, -22, -3, -46, -31, 27, -24, -10, -31, -46, -38, 43, 16, -3, -24, -13, -40, 25, 1, -51, -39, 1, 9, -6, 9, -6, -17, -22, 47, -48, -26, -26, -4, 21, -9, -113, -24, 20, -19, 29, -29, 7, 36, -13, 25, 4, 34, -17, 9, 6, -13, -83, -36, -10, -7, 12, -31, -35, -11, 39, -9, -31, -28, -40, 19, -28, 20, -29, -51, 2, 26, 53, -52, -42, 13, 23, -21, -47, -43, 22, 35, -2, 35, -127, -37, -78, -35, -13, 0, 13, -49, -23, -17, -11, 17, 4, 33, -45, 23, -66, -26, -9, 35, -9, -35, -2, 11, 0, -2, -55, -10, -2, -30, 2, 34, -106, -21, -28, 31, 17, -35, -45, -35, 31, 25, -52, 5, -33, -5, -43, 11, -121, -34, -14, 15, -9, -40, 0, -26, 15, -10, -41, -33, -27, 42, -38, 27, -30, -10, -18, 5, -8, 24, 14, -46, -14, 44, -51, -15, -40, -7, 26, -15, -81, 3, -12, 26, 1, -11, -18, -52, 25, 14, 8, -23, 18, -42, -7, -32, -94, 31, 15, 17, 38, -11, 21, 15, 23, 5, -51, 7, 38, 6, 3, 33, -56, 22, 8, -7, 2, -22, -5, -40, -12, 23, 18, -1, -11, 14, -11, 14, -22, -35, 31, 7, 23, -38, -33, -18, -21, 32, -15, -25, 17, -39, -19, 3, -47, 8, -31, 33, 53, -4, 27, 6, 1, -1, -41, 34, -38, -26, 6, -14, -58, 4, -4, -11, 25, -20, -38, -5, 39, 3, -7, 2, -35, 9, -17, -5, -23, -17, -54, -9, 39, -20, 20, -15, 41, -14, -19, 19, -31, 43, -44, -3, -15, -25, -63, -21, 30, -29, -34, -26, -7, -16, -17, 14, 12, -3, -4, 12, -61, 3, -44, 12, 12, 10, 4, -36, -27, 10, -53, -38, 1, 28, -49, -35, -74, 46, -52, -26, 20, -32, 5, -39, -25, -36, -32, -32, -33, -31, -4, 8, -2, -4, -45, -22, 19, -46, -27, -21, -3, -13, 1, 22, -2, 27, -44, 2, -18, 18, -26, -12, 10, 23, -8, -40, 21, 14, -31, 10, -36, 40, -41, -22, -39, -2, -3, -14, -28, -27, 14, -29, 9, -5, 20, -41, -7, 13, 17, 0, 2, 36, -35, 30, 3, 0, -16, 1, 18, 0, -53, 10, -58, 8, 16, -36, -68, 11, -49, 15, 39, -6, -50, -50, -25, 32, -10, 15, 2, -18, 31, -9, -69, 1, -53, -30, 45, -19, 19, -28, 42, -12, 13, 11, 12, 6, 4, 3, -89, -29, -47, 23, -3, -9, 2, -28, -16, -3, -33, -25, -36, 30, 0, 23, -51, -9, 3, 27, 43, 18, -35, -36, 3, 20, -54, -5, -14, 49, -29, -3, 9, -26, -21, -42, -21, -36, -25, -42, 35, -45, -39, -17, -7, -12, -12, -11, -59, -7, -73, -39, -19, -1, -28, -36, 28, -6, -40, -9, 0, 4, -36, -29, -59, -4, -35, 26, -31, -36, 29, -42, -8, -20, -21, -7, 0, -30, -35, -31, -11, 26, -58, -28, -46, -3, -21, -1, 18, -31, -35, -39, -64, -23, -22, 7, 2, 46, -71, -19, 12, -17, 31, 13, -12, 7, -9, -13, -9, 40, -42, 13, -51, 47, -46, -39, -1, -45, 0, -46, 12, -46, -24, -51, -30, 25, -55, -45, -41, 27, -41, 10, -57, 15, 5, -41, 24, 13, -15, -10, -4, -9, -7, -36, 48, -19, -84, -13, 10, -46, 34, 22, 3, -19, -58, -32, -12, -28, -22, -20, -30, 43, -54, 7, -30, -44, 17, -8, 40, -9, -28, 21, 6, 3, -12, -13, -48, 34, -10, -17, 14, -24, -6, -19, 1, 18, -4, -5, 1, -2, -20, 9, -61, 4, -31, -15, -3, -29, -37, 15, 27, 38, -52, 21, -16, -23, 14, 30, -62, -31, -23, -7, 34, -23, -19, 25, -5, -20, -36, -3, 3, 2, -9, 17, -40, -36, -38, -33, -8, 5, 34, -34, -4, -38, -36, 15, -44, -16, -26, 22, -49, 2, -59, 15, -23, -20, 5, -8, -32, 6, -55, -31, -68, 35, -42, 13, -53, 16, -82, -8, 6, 11, 28, -35, 1, 7, 6, -40, -45, 30, -32, 15, 18, -10, -70, -31, -6, 0, 31, -24, -6, -28, -19, -6, -5, 13, -58, -20, 2, 7, -81, 23, -39, -18, 22, -21, 16, -33, 10, -44, 6, -15, -26, 9, 20, 14, -48, -23, -41, 0, 26, -25, -49, -27, -8, -24, -29, 9, 8, -20, -22, -19, -72, 24, -56, -10, 27, 2, -34, -1, -26, -43, -58, 0, -54, -10, 39, 34, -11, 21, -38, -26, -25, 19, -42, 2, -46, -6, -5, -13, -2, -10, 26, 35, -26, 50, 23, -8, 32, 20, -21, -24, 7, 1, -55, -7, -39, 21, 11, -10, -88, -5, -17, -31, -30, -40, -15, 29, -11, -50, -37, 7, 9, -16, -76, -6, -36, -7, -1, -16, -20, 36, 7, 20, -54, -35, -14, -11, -51, 12, -69, 9, 8, -4, 0, -24, -29, -15, -8, 24, -12, -1, 13, 3, -17, 41, 29, -58, -15, -56, 9, -15, 12, -6, 15, -58, -6, -39, 16, 20, -16, -13, 15, -25, -42, 5, -50, -23, 23, -26, -32, -49, -24, -27, 2, -12, -8, -28, 15, 5, -13, -32, 11, -29, 21, 13, -21, -52, -16, -20, -48, 4, -8, 16, 59, -2, -81, 12, -52, -55, 23, 9, 14, 0, -9, 10, -41, -31, -19, -41, 55, 25, -28, -46, 10, 3, -14, -20, 19, -61, -44, -9, -13, 5, -44, -12, 52, 36, -79, -1, -43, -3, 2, -17, -28, -22, 8, 8, -64, -18, -37, -27, -41, 21, -71, -2, 9, -17, 8, -32, 4, -7, -3, -37, -21, -47, -59, -33, 2, 15, -58, 16, 4, -44, 3, -19, 10, 2, -36, -16, -56, -27, -32, -47, 7, -7, -59, 9, -18, -40, -25, -5, -36, -26, 1, -42, -46, 12, 5, -12, -17, -4, -11, -24, 13, 23, -47, -16, 43, -16, 10, -3, -40, 15, 0, 18, -54, -40, -19, -21, 50, -8, 15, -11, 38, 8, -11, 22, 2, 31, -15, 14, -94, -21, -17, 25, 31, -13, -11, 6, 32, -21, 1, -11, -28, -30, -20, 36, 29, -1, -15, -35, 1, -32, -33, 9, -24, 13, -4, 11, -16, -11, -68, 24, -9, -51, -41, -32, -7, -27, -28, 16, 30, -17, -15, 16, 23, 3, -15, -22, -38, 22, -44, 15, -21, -52, -21, -41, -26, -38, -7, 5, -6, -15, -6, -8, 17, 21, -12, -5, -57, -8, 18, 2, -10, -47, 19, 3, -33, 29, -43, -8, 49, 34, -53, 3, -50, -32, -6, -26, -6, -44, 9, -16, -10, -22, -55, -14, 43, -9, -38, -39, -17, 4, -2, 13, -32, -46, -51, -9, 1, -30, -41, -29, -5, -5, -82, 24, 16, -21, -5, -33, -39, -51, 7, -10, -25, -37, -62, -7, 22, -14, -19, 1, -51, 22, 23, -2, 1, -24, -37, -47, 1, 12, 2, -37, -27, -16, -16, 23, -13, -28, -25, -34, 31, 6, 30, -5, -14, -47, -40, -23, -20, -29, -25, -10, 42, -34, -7, -22, 36, 0, 19, -39, -40, -16, -43, 18, -56, 0, -35, -25, 30, 20, -22, -22, -5, -29, -10, -14, -23, -29, -6, 36, -102, 5, -29, 16, -1, -14, -4, -26, 35, -11, -55, 6, -6, -13, -42, 10, 16, -35, -24, 6, 29, -10, 0, -1, 40, -19, -29, 25, 25, 32, -41, 29, -35, -46, -65, -28, 29, -40, 35, 2, -25, -11, -10, -35, 27, -19, -16, 7, -22, -37, -48, 9, 11, -32, -19, -2, -24, -55, -27, -35, -52, -46, -5, 5, -31, -34, -81, -27, -21, -47, 7, -19, -11, -26, -4, -5, -33, 20, -33, -25, 6, 5, -54, 12, -10, 9, -22, -29, -17, -11, -5, 2, -59, 7, -7, 13, 25, -41, -43, 1, 10, -50, 44, -33, 10, 0, -47, 2, -27, -37, 4, -26, -11, -31, -72, -14, -45, 11, 37, 5, 1, -53, 7, -37, 16, -23, -48, -8, -17, 20, -80, -9, -26, -44, 29, -40, -6, 7, 13, -51, -13, -14, -8, 14, 27, -6, -51, -2, 4, -27, 20, 8, -9, 19, 4, -35, -37, -21, -21, 18, -51, -12, -38, 19, -5, -23, -11, 11, 42, 8, -49, -4, 0, 20, -51, -26, -56, -31, -36, 41, 52, 10, -29, 23, 24, 21, -6, -20, -29, 30, -6, 23, -80, -31, -22, -3, 37, -15, -41, 6, 25, 22, -21, -20, -31, -27, -21, 27, -28, -33, 12, -1, 37, -21, 14, 14, -9, 24, -50, -30, -16, 21, -8, 30, -1, 1, -34, -31, 49, 18, 23, -12, 48, -10, 2, 28, -26, -5, -27, 14, -18, -44, -42, -5, 0, -19, -2, -11, -26, -39, -13, -11, -20, -21, -6, 26, -55, 4, -73, 4, -2, -6, -21, -46, 5, -45, -48, 5, 9, -28, -21, -20, -37, 7, -54, -34, -46, -40, 37, 16, -41, -31, -7, -15, 21, 0, -21, -44, -1, 3, -14, 8, -5, -7, 30, -41, 17, -22, -50, -43, -50, -32, -37, -27, 5, 26, -2, 4, 21, -33, -14, -47, 2, -31, 6, -6, -38, -29, -32, 13, -11, -7, -83, 29, 16, -10, 11, -8, 4, 19, -36, -47, -44, -27, -47, -13, 33, -48, -14, -2, 26, -26, -2, -35, -3, 4, -1, 17, -24, 13, -18, 4, -70, -13, -71, -18, 40, -25, -1, -11, 21, 21, -27, 16, -23, -12, -14, -26, -117, -13, -5, -23, -3, 2, -17, -22, 41, 30, -49, 17, 7, -20, -11, 30, -28, -41, 5, -23, 17, 18, 13, -56, 37, -16, -55, -33, 7, 16, -6, 16, -26, -11, -40, 23, 37, 6, -24, -39, 12, -3, -3, 17, 1, -17, -19, 11, -68, -2, -18, -16, 8, 5, -4, -40, 18, -26, -10, -26, -28, -36, -57, -24, -11, -33, -75, 6, 44, -24, 15, 6, -1, -2, -7, 11, 4, -13, -47, -12, -50, -35, -32, -45, -10, -43, -18, -4, 18, -51, 13, 29, 4, 5, -39, 9, -42, 0, -39, -35, 8, -30, 36, -7, 15, -23, -27, -37, -30, -9, -25, 27, -2, -56, -6, 6, 33, -46, 18, -43, 37, -13, 15, -26, 11, -4, -52, 20, -47, -23, -15, 13, -12, -1, -22, 0, -5, -6, 32, -37, -11, 17, -1, 7, -65, -12, -54, 40, 35, 4, 3, -53, 37, -13, 18, -10, 8, -34, 18, 20, -65, -35, -37, 8, 39, -44, -43, -34, 46, 28, 7, -27, -9, 10, 1, 0, -75, -23, -40, 2, -16, 8, -10, 10, 35, 8, -34, -30, 15, -5, 5, -17, -71, -46, -30, -22, 44, -31, 30, -22, -1, -17, -20, 34, 3, -21, -7, -32, -54, 3, -5, -13, 39, -21, 17, 10, -19, 37, 4, -37, -2, 32, 24, -8, -10, 44, 3, -27, 0, -7, -22, -50, 50, -19, 5, 12, -24, 15, -8, 33, -44, -27, -53, 45, 36, -44, 11, 15, 25, 20, -45, -42, -2, -35, -4, 6, 5, -29, -27, -7, 31, -48, -31, -40, 1, 0, -4, -29, -4, -7, -37, -27, -12, 26, 24, -3, 5, -7, -27, -6, -6, -2, -27, -10, -33, -46, 0, -11, 6, 36, -20, 29, 6, -16, 1, 9, -15, 37, -23, 3, -20, -3, 15, 24, -21, 7, -72, -10, 16, -39, -1, 3, -22, 26, 9, -40, 31, -45, -8, -25, 23, -27, -41, 20, 19, -9, 15, 19, 39, -13, -18, -17, -6, -32, -12, 1, -7, 31, -14, 8, 49, 21, -6, -36, 12, 30, -49, 4, -13, -29, -37, 33, -45, -26, -23, 24, -16, -1, -13, -46, 49, -26, -11, -23, 15, -2, 11, 15, 16, -17, -7, -6, -18, -1, 4, -51, 23, 24, 7, -27, 15, -34, -40, -20, -3, 3, -23, 26, 44, -12, 30, -4, -12, 6, 11, 6, -2, 35, -21, 33, 10, 27, 37, 
  7, -54, 4, -31, -21, -22, -38, 17, -57, 29, -21, 44, -9, 59, -24, 41, -6, 1, -15, -9, -23, 7, 16, 33, -20, 51, 7, 31, 13, -10, -38, 39, -26, -31, -18, -21, 24, -10, -41, 36, -9, 14, -12, -25, 30, 39, -43, 28, 32, 21, -21, -8, -15, -13, 15, 57, -33, 24, -29, 21, 12, 22, -38, 69, 24, 25, 14, -25, 43, 23, 4, -19, -28, 5, 13, -11, -21, -44, -34, 21, 16, 5, 4, 33, 24, -7, -20, -12, 44, 61, 58, 17, 10, 90, -5, 20, -39, -18, -11, -16, 20, -16, -19, 19, 20, -18, -10, -26, -11, 71, -22, 24, -11, -19, -18, -2, 5, -31, 43, 38, 12, 17, -18, -2, 26, 18, -16, -26, -2, -17, 39, -1, -21, 23, 29, 11, 10, 19, 9, 14, -31, 28, 2, -38, 3, 30, 18, 15, -21, -7, 59, -12, -22, 34, 23, 61, -14, 22, 33, 19, 34, 14, -42, -14, 3, -3, -9, -35, 16, 61, 12, 34, -19, 45, 23, 9, -57, -45, -19, -52, -23, 25, 40, 12, 9, 54, -25, -53, 22, -26, -8, -17, -31, -38, -38, -32, -60, -23, 38, 26, -19, 4, -72, 25, 17, 60, -35, 33, 50, 6, -16, -31, -14, -44, 0, 47, 0, 56, 21, -18, 19, -4, -23, 6, -13, -47, -18, 22, -6, -6, -12, -8, 12, 24, 17, 37, -11, 50, -22, 54, 35, 30, 45, -11, 11, -57, -7, 3, 24, -12, -38, 22, -23, 13, -49, 53, -10, 16, 2, 9, 24, 35, 30, -15, 24, -20, -43, 10, 25, -9, -19, 45, -35, -16, 38, 11, -16, -37, 16, 0, 11, -10, 6, -11, 23, -41, -17, -59, 2, -10, -20, -12, 12, -23, -42, 17, 24, 8, 5, 13, -2, 36, -9, 5, -36, -38, -1, -4, 26, -48, 3, 45, -24, 8, -33, -1, 6, 50, -13, 36, -1, 14, 38, -17, 18, -14, 9, 5, 31, 33, 20, 8, 25, -25, -17, 42, -44, -42, 31, 13, 36, -38, 28, 2, -14, 58, -5, -8, 18, 58, -32, 17, -9, -47, 9, -38, -21, 32, 27, 7, -11, 40, 14, -14, -4, 43, -20, 68, -54, 28, 20, 4, -41, 11, -20, -24, -7, 20, -21, 38, 26, 26, -3, -5, 15, 17, -26, -5, -33, -13, -3, 44, -26, 37, -47, 9, 7, 35, 0, 45, 4, 21, 39, 8, 9, -30, -18, 55, -8, 18, -43, 5, 41, 1, 10, 40, -6, -24, -13, 34, -26, 3, 36, 10, -6, -10, -35, 58, 30, 23, 7, 60, -20, -5, -4, -31, -2, -48, -11, -12, 0, 9, -55, -23, 35, 19, -4, 34, -19, -18, -25, 25, -4, 11, 36, 42, 21, 28, -70, 49, 26, -23, -37, -11, -2, 17, 48, 6, 9, -39, -22, 38, 6, -9, -25, -15, 21, -45, -20, 71, -32, 3, -10, 20, -7, 9, 17, -3, 12, 43, -62, 55, 28, 20, -51, 48, -16, 33, 45, -5, -16, -31, 39, -3, -19, 15, 1, 36, 7, -16, -51, 18, 18, -8, 19, -14, 12, 32, 14, -13, 38, -2, 25, -2, -15, 1, -24, 42, -43, 29, 17, -8, 17, -6, 27, 39, -10, 42, 21, -42, 14, 17, 10, 67, -57, -19, -5, -33, 19, -26, 11, -13, 22, 40, 1, -18, -8, 88, -37, 39, -18, -6, 15, 14, -39, 6, 33, -14, -13, -30, -17, -14, 16, 44, -17, 46, 35, 12, -1, -46, -11, 2, 57, 11, 5, 42, -3, 61, 1, 36, -32, -26, -14, 59, -12, -32, -14, 23, 32, -5, 27, 28, -8, -8, -25, -4, 9, 66, -9, 14, 2, -40, 41, -30, -30, -12, 14, -3, -37, 34, 6, -21, -18, 13, -39, 29, 28, 3, 0, -36, 12, -1, 15, -7, -48, 14, 10, -18, -33, -28, -12, 11, 47, -52, -6, -35, -24, 68, 13, 15, -19, 12, -22, 5, -14, 8, 19, 31, 9, -19, -4, -41, -11, 7, 27, -4, -20, 15, -19, -49, -23, 21, -8, 31, 26, 15, -16, -21, 7, 30, 50, 1, -77, 45, 39, -20, -37, 7, -33, 34, 11, 17, 60, -2, 45, 4, 16, 20, -61, -2, 25, 3, -30, 25, 39, 24, 40, 28, 32, -19, 6, 49, 15, 48, -28, 21, -8, -70, -35, -33, -20, 7, 57, -6, 25, 8, 40, 11, 30, 17, -19, -10, 43, -23, -54, -13, -61, 20, -28, 15, 52, -39, 31, 16, 13, 20, 15, 19, 15, 6, -38, 38, -54, -25, -4, -30, -32, -4, 44, 45, -49, 51, 32, -14, 0, -17, -39, 12, -25, 40, 26, -11, 21, 25, 50, 50, 0, -20, -17, 69, -25, -4, 4, 20, 45, -16, 36, -4, -26, 6, 9, 19, -7, -19, -61, 24, -11, 6, 10, 47, -5, -6, 37, -35, 44, -8, 42, -13, 2, 9, -53, 34, -17, -50, 10, -7, -50, 27, 29, -47, 50, -14, 8, -20, -10, -7, -39, 42, -29, -37, 14, 17, -5, 7, 2, 17, 12, -42, -12, 6, 31, -29, -17, 0, -30, 38, 10, 51, -50, 28, 22, 14, 32, -58, 39, 63, 7, -4, -46, 38, 29, -11, -35, -13, -44, 40, 27, -37, -9, -23, 50, 14, 45, 1, -71, 50, -21, 17, -18, 31, -37, -4, 42, -34, 32, -11, 8, 29, 1, 17, -62, 56, 30, -67, -30, -16, -71, 11, 24, -14, -2, -5, 31, 56, 5, -16, -28, 69, 38, -3, 9, 26, -71, 31, 0, -29, 23, 17, 7, 4, 2, -14, -77, 30, 20, -91, -28, -28, -78, -12, 31, 21, 57, 1, -10, 44, 38, 12, -31, -4, -14, -37, -5, 54, -59, 28, -8, -47, -11, -49, 41, 8, -32, 9, -13, 45, -16, -18, -43, 24, -1, 14, -8, -13, -7, -26, 2, 11, 29, 15, -36, -6, -31, 5, -1, 38, 7, -36, -8, -17, 5, -49, -9, 40, -3, 4, 0, 35, -7, -22, 20, 31, -26, 7, 2, 23, -2, -43, 30, 29, 9, -34, -33, 16, 5, 14, 10, -7, -56, -2, -1, -22, 36, -34, 25, 33, -6, 33, -53, 35, 24, 68, -27, -9, -57, 9, 0, 17, -11, -12, -5, 28, 31, 18, -35, 54, -30, 35, 22, -20, -31, -50, -4, -3, 25, -42, 50, -4, -3, -19, -40, 11, -10, 16, 25, 39, -73, -38, 5, 1, 26, -53, 40, 40, -4, 22, -83, 17, 14, 23, -14, -1, -20, 23, -2, -2, -18, -37, 17, 42, 20, 11, -29, 31, 7, -35, -33, -49, -45, 3, 26, -5, -11, -32, -5, 19, -13, 20, -73, 36, 14, 39, 2, -9, -27, -46, 2, -21, -11, -23, 6, 64, 4, 17, -50, 4, 8, 79, -27, -16, -44, -41, 28, -31, 12, -26, -7, 21, 4, 2, -45, 40, 26, -32, -35, 16, -1, -20, -27, -39, -15, -40, 34, 13, -14, -31, -22, 47, 12, -81, 11, -5, -34, -10, -3, 0, -25, -16, 9, -10, -34, 45, 17, -30, 0, -47, -28, 6, -2, 18, 16, -30, 6, 22, 23, 25, 22, 40, -5, -21, 1, 19, -23, 49, -25, 4, 19, -5, 10, -25, 20, 55, 31, -12, -3, 1, -35, 35, 32, 57, -67, -23, 27, 14, -6, -31, -24, 51, 37, 12, -69, 52, 9, -6, -6, -20, -20, -45, 3, 11, -1, -48, -7, 0, 52, 29, 15, 4, 13, 10, -23, -13, -21, -26, 28, -15, 14, -74, 3, 31, 9, 4, -55, 2, -19, 12, -38, 45, -15, -19, 53, -6, 4, -37, 28, 20, 19, -14, -34, 59, -26, -18, -23, -27, -56, -31, 35, 27, 7, -4, 27, -8, -4, 27, -27, 17, -30, 33, -26, 2, -72, -27, 46, 10, -16, -48, 15, -2, -18, 32, -17, 15, 16, 7, -10, 36, -71, 6, 26, -5, 24, -49, -27, 61, 27, 37, -32, 41, 0, 29, -23, 19, -35, -9, 28, -35, -18, -3, 25, 56, 14, 32, -43, 18, -26, 31, -2, 74, -14, -5, 9, -37, 25, 17, -11, 20, 22, 13, -15, 53, -1, 25, 8, -26, -33, -30, 8, -27, -16, -40, 6, 31, -25, 5, -59, 6, -11, -18, -15, -9, -22, -17, 5, -14, 29, -25, 5, -15, 12, -18, -10, -9, 12, 52, -1, 53, -43, -57, 9, -10, -4, -7, 5, 10, -10, -13, -58, 16, -19, 100, -24, 14, -24, -45, 10, 16, 19, -9, 21, 34, 41, 13, -21, 17, -3, 89, -5, 2, -4, -53, 4, 3, -8, -52, 26, -3, 19, 57, 32, -28, 32, 74, 8, 12, -21, 19, 49, -10, 42, -26, -27, 46, -8, -3, -12, 31, 1, 40, 27, -10, -52, 12, 37, -7, 0, -17, -4, 10, 17, -14, -77, 17, -8, -37, 3, 0, -1, 43, -3, -46, -14, -25, 3, 12, 49, 39, -73, 35, 14, -12, -47, -7, -8, 27, -2, 14, 12, 8, 5, 0, -18, -18, -24, 21, -8, 14, 3, -3, -51, -38, -10, -42, -14, -15, 43, -10, -25, -3, -80, 30, -7, 30, 6, 16, -8, 7, 41, 25, 22, -13, 53, 17, 17, 3, -42, 25, 14, -17, -52, 14, 18, 15, -6, -12, 22, 24, 11, 6, -15, -12, -14, 34, 0, -24, 21, 13, -16, -23, 10, -9, 28, -35, 34, 40, -35, -31, -65, 45, 14, -14, -42, 16, -39, 14, -10, 34, 22, -3, 0, -14, -5, -26, -20, 20, 22, -8, 6, -13, -78, -56, 9, 7, 46, -51, 23, 0, 25, 39, -3, -25, -14, 46, -10, 19, -2, -30, 39, -23, -7, -58, -16, 9, -20, -39, -22, 16, -11, 26, 8, 37, -9, -36, -8, -20, -11, -14, -7, 33, -10, 48, -12, -26, -32, 27, -24, -3, -12, -8, 23, -26, 43, -31, 24, 32, 9, 2, -79, 13, 2, 61, -22, 38, -26, 11, 54, 26, 47, -54, 22, 21, 7, 16, -91, 42, -19, -29, -65, 32, -60, 34, 13, -20, 47, -37, 32, -26, 7, -2, 5, 48, 14, -23, 17, 40, -25, -5, 27, 11, 39, -40, 15, -1, -24, 7, -65, 40, 13, -36, 17, -15, -54, -7, -8, -38, -7, -15, 42, 53, 48, -24, -90, 49, 1, -34, -4, 17, 5, 2, 26, -24, 12, -35, -2, -12, 37, 1, -49, 6, -27, -31, -22, -21, 2, 0, 7, -19, 10, 12, 51, -16, -17, -10, -42, -14, -5, -16, -22, 8, 29, 15, 11, 10, -19, 6, -10, 14, -4, 4, -3, 10, 35, -24, 19, 15, -59, 17, -4, -24, 26, -50, -22, 25, 26, -27, -42, -14, 1, 26, 19, -18, -12, 2, 0, -13, 28, -70, 40, -21, -23, -14, -27, 52, 15, -20, 23, -14, -19, -7, -20, 7, -11, -43, -25, 9, -15, -4, -41, -11, -24, -23, 4, -15, -62, -30, 48, 14, 44, -44, -19, 24, 5, -35, -11, -19, -40, 2, 1, 18, -28, 13, 39, -6, 45, -52, 35, 47, -6, 35, -75, 46, -29, 69, -11, 19, -54, -8, 36, -31, -16, -33, 22, 26, 45, -43, -100, 52, -24, -34, -39, -11, -21, -9, 49, 17, 16, -10, 1, 8, 42, 5, -33, 16, -9, -67, -21, 22, -19, -5, 34, 9, 22, -4, -21, 11, 0, -2, -62, 29, -29, -45, -50, -6, -59, -31, -15, 20, 11, -51, 43, -20, -8, 0, -47, 11, -16, 39, -3, 18, -10, 9, 2, -22, 28, -59, 23, 33, 6, -4, -56, 39, 20, -27, 33, 9, -29, 10, -4, -10, 4, 8, 47, -17, -18, 0, 2, 14, -25, -47, 10, 51, -38, 7, -8, -29, 22, -33, 11, 14, -7, 26, 8, 22, -31, -33, 4, 34, -21, -45, 32, -24, -8, 7, 17, 3, 6, -7, 29, 13, 11, -15, 6, 25, -51, -24, 2, -32, 18, -13, -52, 19, 14, 16, -62, -8, -3, 16, -30, -42, -22, -7, 7, -33, -6, -34, 18, -27, -7, -32, -72, -13, -20, -69, -38, -49, -69, -32, 53, -28, 24, -30, 28, -9, -20, -7, -31, 42, -41, -44, 10, -13, -52, -29, 4, -39, 28, -41, -20, 28, 30, -35, -79, -2, -33, 13, -4, 7, -43, -40, 29, -8, 37, -54, 27, 2, 2, -9, -71, 24, -31, 23, -53, 4, -20, 22, 26, 33, 35, -37, -5, 43, 36, 8, -90, 30, 26, -43, 27, 6, -37, 8, 16, -19, 53, -43, 37, 32, 25, 4, -35, 17, 21, -10, 3, 3, -74, -8, 43, -19, 35, -11, 3, 22, 39, -31, -10, -9, 3, -13, 26, -36, -19, -14, 33, 16, 37, -43, 9, -10, -2, 29, -6, 49, -8, 40, 13, 39, -58, -51, -10, -32, 16, -40, 13, -16, -13, 4, -16, 35, -32, -5, -16, 21, 1, -32, 38, -3, -2, -24, 5, -12, 51, 38, 1, -31, 17, 24, -39, 12, -24, -24, 4, -13, 20, -51, -51, -7, -14, 8, 28, 27, -21, 13, -9, 16, -57, -63, 29, 32, -16, -26, -43, 38, 31, -1, -27, 43, -52, 16, -36, -22, 12, -27, 0, 6, 34, -8, -23, 46, 34, -54, -46, -1, 17, 20, -14, -33, -37, -46, -10, 5, 23, -7, -14, -19, 9, -4, -12, 38, -44, -40, -6, -28, -2, 6, 6, -4, -5, -52, -28, 13, -13, 10, -61, 23, -32, -43, -26, -33, -15, -49, 16, 15, 2, -29, -20, 21, -8, -6, 23, -28, -14, -41, -28, -14, -29, -8, 34, 3, 19, -55, 7, 49, -9, -26, -68, -14, 21, -62, -30, 57, -36, -5, 45, 35, 15, -35, -27, 33, -5, -3, 3, 19, -2, 3, -9, 20, -69, -15, 30, 24, 5, 4, 3, -14, 16, 0, -48, 43, -25, 13, -33, -30, -60, -8, 31, -16, -8, -58, -32, 30, -24, -21, -77, 36, -37, 4, -27, -48, -42, -14, 5, 19, 20, -57, -10, 18, 43, 13, -7, 49, 6, -17, -35, 36, 
  -46, -7, 33, 47, 31, -27, -23, 22, 44, -68, 29, -44, 18, 13, 41, 6, 4, -2, 67, 60, 39, -52, 7, 4, 1, -45, -4, -11, 22, -7, 35, -80, -16, -43, 47, 8, 23, -8, 12, 18, -3, -27, 19, -7, -16, -19, 12, -4, -40, -31, 60, 22, 49, -40, -16, -12, 40, -45, 39, 24, 13, 28, 36, -79, -20, -24, -4, 10, 22, -26, -13, 4, 13, -28, -16, 18, 13, 50, 56, -47, -32, 1, 0, 52, 51, -41, -51, -37, 47, -84, 22, 28, 1, -43, 22, -42, -40, 11, 14, 64, 14, -17, 1, 12, 46, -19, -1, -3, 5, -32, -6, -64, -8, -56, 24, 62, 57, -54, -51, 10, -7, -5, -22, -1, -16, -33, 55, -99, 11, -41, 7, -3, 39, -7, -53, -28, 49, -4, 33, -1, 5, 68, 21, -8, 5, -20, 29, 44, 22, -19, -5, -11, -14, -23, -1, -28, -37, -34, 57, -7, 1, -6, 0, 18, 2, 13, -49, 17, -7, -5, 18, -13, -11, -65, 35, -29, -44, -46, -32, 33, -19, -3, -28, -24, 6, -17, 44, -7, -26, -51, -4, -47, 16, -74, -28, -2, -7, -33, -55, 21, 7, -41, 34, -7, -21, 40, -2, 37, -36, -70, 57, 69, 47, 7, -7, -27, -11, -13, -63, -19, -17, 72, 61, -17, -22, -35, 5, 0, 59, -3, -20, 40, 66, -52, -44, 35, -19, 19, 21, -52, 8, -22, 10, 31, 47, 13, -56, -16, 58, -64, 30, -10, -39, -7, 65, -101, -35, 1, 23, 62, 12, 8, 7, -8, -7, -67, 8, -29, -12, 47, 11, -64, -7, 3, 36, 57, 31, -21, -19, 18, -8, -28, -41, -3, -24, -31, 46, -65, -45, 15, -18, 14, 60, 11, -39, -11, 59, -47, -5, -30, 0, -71, 25, -20, 3, -18, 4, 7, 60, 8, -11, -1, 50, -11, -34, 18, -24, -25, 8, -66, 2, -29, 0, 18, 49, 6, -3, -31, 16, -63, 48, -34, -16, 2, 57, 19, -39, -21, 13, 7, -7, -36, 15, -31, -16, 6, -16, 0, -24, 2, 4, -41, -35, -32, 27, 2, -1, -16, -57, 27, 11, -46, 16, -61, 38, -4, 34, 10, -57, -60, 10, 47, -36, -6, -10, 15, 26, -61, 31, -37, 8, 5, 0, -10, 4, -39, -20, 33, 10, -44, -30, -40, 12, -32, -5, -28, -10, -35, -8, -9, 7, -12, -31, 40, 38, -51, -62, -29, -4, -33, 14, -17, 9, 45, 0, -14, -11, -19, -26, 46, 14, -25, -39, -19, 23, -53, 1, 16, -37, -11, 13, -67, -6, -58, -2, 51, 15, 6, -57, 38, 33, -4, 10, 17, -26, 49, 9, -1, -5, 3, -14, 20, 36, -7, -20, 13, 19, -82, -7, 23, 27, -23, 5, -44, -11, 7, 27, 43, -12, 30, -37, 9, 8, -27, 44, -40, -9, -1, 4, -22, -27, -35, -18, 34, 18, -39, -42, -52, -4, -10, -8, -63, 23, -8, 19, -21, -10, -59, 10, 41, 54, -36, -16, -11, 26, -44, 5, 6, 24, -23, 53, -39, -42, -28, -22, -7, 18, -61, -41, -17, 13, -55, 27, 12, 3, -37, 13, -60, -41, -37, 41, 4, 42, -35, -16, 0, 41, -14, -7, -12, 20, 34, 17, -25, -22, -44, 29, 23, 51, -19, -42, 22, 40, 15, 54, -45, -7, -33, 53, 12, -40, -38, -4, 12, -3, -23, -49, 11, -25, -23, 18, 2, -30, -3, 2, -9, 0, -70, -34, -11, 14, 2, -52, -37, 36, -44, -4, -48, 1, 23, 12, -4, -28, -56, 18, 29, 3, 8, -45, -53, -1, -68, -18, -31, -15, -59, -13, -14, -22, -55, -15, 36, 13, 0, 13, -23, 8, -9, -14, 12, -4, 33, 58, -44, 33, -16, -14, 35, 46, 16, -10, 6, -12, -14, -28, -22, 23, 32, 0, 0, -50, -34, 23, 40, 23, 3, -41, -5, 41, -67, -14, -33, 33, 33, -1, -74, 5, -48, -29, 60, -12, 30, -54, -19, 18, -63, -3, -17, 18, -4, 43, -52, -35, -11, -13, 42, -15, -12, -74, -4, -9, -27, 17, -15, -43, -15, 6, -3, -14, -15, -20, 14, -8, -1, -80, 11, 2, -54, 16, -8, -33, 37, 5, -4, -59, -50, 34, 52, 28, -36, -23, 14, 3, -12, -7, -42, -8, 34, 16, -6, 9, -24, 29, 56, -13, -12, -45, -37, 21, -45, 7, -32, 2, 8, 24, -4, -3, -62, 0, -14, 6, -11, -49, 23, 29, -40, 15, -8, -40, 32, 45, 26, 16, -56, -19, 12, 11, -7, -32, -26, -17, -32, 2, -49, -35, 65, 37, 14, 15, -32, 5, -7, -13, -35, -25, -35, 17, -16, -56, -61, 10, -16, 27, -50, 25, -20, -18, 42, 42, -8, 2, -44, 35, -3, -6, -33, 29, 6, -6, -73, 12, -38, 2, 13, 41, -11, -4, 5, 12, -42, 8, -39, 6, 10, 36, -29, 3, 5, -23, 33, 3, -6, -20, 17, 32, -65, 18, -19, -26, 38, -12, -45, -40, -30, 22, 38, -2, 7, -8, -36, 56, -49, 3, -21, -19, -47, 30, -58, 7, -46, 10, 2, -11, -16, -41, -60, 54, -68, 11, -29, 11, 4, -14, 10, -1, -53, 7, 12, -4, -35, -5, -44, 32, 3, 41, -56, -21, -44, 33, -19, -36, -17, -16, 41, -10, -8, -76, -32, 1, -35, 9, -2, 23, 65, 11, 2, -7, -78, 14, 9, 37, -18, -9, -7, -20, -49, 20, -68, 11, -40, -4, 28, -2, -63, 11, 46, 0, -42, -19, -7, 30, -28, -24, -50, -2, 5, 10, -9, -11, -29, -41, -19, -8, 9, -21, -2, 34, -27, -61, -33, 9, 58, 33, -55, 27, -21, 30, -14, -42, -4, -32, -18, -10, -1, -49, 14, -35, 78, 36, -18, -28, -27, -19, 32, 26, 11, -7, 13, 39, -74, 3, -7, 5, -26, -7, -25, -28, -10, 8, 25, 10, -38, -53, 15, 2, -44, 1, -11, 9, -17, 28, -60, -22, -5, 16, 43, -10, -25, -42, -20, 1, -27, 25, -66, -2, -6, 32, 4, 9, -56, 13, 45, 30, 31, 4, -44, 39, -57, 14, -46, 21, 8, 53, -21, 19, 7, 24, -10, -19, -1, 3, 0, 41, -19, -2, -21, 28, -36, 38, -58, 22, 10, 2, 37, 11, 9, -1, 1, 7, -42, 26, -6, 8, -4, 19, -19, 56, -33, -21, 30, 52, 16, -25, -18, -9, -45, 60, -59, 25, -9, -5, -39, 3, -9, -9, 22, 56, -15, 2, 0, -5, 17, 53, -14, 38, 40, 8, -67, -45, -37, 23, 45, -13, -31, -49, 10, -10, -19, 12, -50, -16, -21, -25, 24, 26, -40, -36, 7, 2, 1, -30, 8, 39, -39, 11, -51, -32, -12, 3, 15, 25, -9, -19, 43, 1, -37, -34, -47, 34, -38, 35, -56, -33, 10, -2, -40, -22, -16, -37, -1, -34, -37, -49, -9, 9, -21, -7, -13, 0, 12, -4, -16, -32, -65, 33, 63, 0, -29, -20, -51, 51, -36, 61, -34, -33, 30, 28, -23, -52, -40, 18, -2, 27, -30, -19, -44, 41, -44, 11, -5, 4, 13, 14, -32, 30, 5, 25, 36, -7, -27, 13, -57, 21, -12, -12, -47, 21, -17, 2, -47, 10, 8, -20, 50, 18, -1, -47, -31, -9, -23, 6, -61, 34, -19, 26, 13, 36, -33, -12, 30, -9, -25, -61, -16, -16, -8, -5, -12, -11, 33, 19, -53, -17, -20, 20, 39, 49, -31, -24, -8, 38, -62, 40, -36, 24, -20, 35, -70, -14, -9, -16, 47, 46, 4, -31, 6, 35, -79, 8, -19, 52, 22, 37, -65, 9, 19, -12, 38, 31, 46, 3, -47, 48, -40, 40, -47, 10, -1, 39, -51, -29, 2, 13, -15, 9, -8, -4, -22, 39, -64, 14, -64, 12, -14, -6, -33, -32, -7, 20, 43, 50, 0, -39, -50, 35, -48, 34, -51, 19, 2, 34, 2, -45, -39, 26, -13, 26, -5, -51, 0, 5, -65, 45, -33, 5, 11, -4, -33, -57, -27, -6, 6, -31, -7, -3, -45, -14, -52, -71, -3, 1, -67, 6, 18, 22, -26, 17, 61, 2, -4, -35, -36, -13, -46, 6, -59, 17, -2, 35, -31, 11, -42, 33, 9, 19, -19, 0, -43, 15, 1, -31, -67, -8, 15, 12, -78, -23, -19, 31, 1, 34, -6, -10, 10, 3, -45, 42, -21, -1, 18, 31, -16, -16, 11, 13, 54, -17, 28, -41, -12, 50, -19, 15, -6, 30, 28, 14, -27, 10, -53, 25, 28, 32, 3, 0, 5, -17, 8, 36, -13, -1, 15, 34, -17, -38, -35, 7, 19, 22, 6, -21, -42, 34, -83, 36, -62, 37, -9, 59, -47, -9, -11, 20, 22, 45, -11, -43, -4, 30, -34, 41, 14, 44, -4, -2, -51, -14, 3, 15, 59, 17, -1, -13, -2, 35, -51, -4, -7, 42, 17, 31, -60, 35, -51, 17, 0, 27, -27, -1, -51, 46, 7, 46, -23, 20, 44, -22, -68, 0, -34, 14, 53, 38, 4, -63, -43, 18, -48, 49, -50, -31, 19, 52, -71, -20, -26, 28, 2, 9, -21, -68, -27, -14, 16, 25, 0, -8, 37, 12, -6, -6, -46, -25, 21, 13, -2, -25, -39, -17, -33, -6, 1, -38, 41, 7, -45, 0, 2, -18, -7, 45, 13, -52, -33, 39, 3, -14, -4, 20, 21, 51, -18, -42, 16, 37, 12, 14, -2, -34, -25, 37, -3, -28, -67, 29, -10, -17, -45, 36, 11, 4, 27, 36, 35, 9, 0, 17, -75, 14, -48, 16, -25, -5, -104, 26, 28, -16, -20, 16, -9, -33, 6, 23, -22, 20, -24, 18, 48, -18, -42, -9, 9, 32, 22, 43, 16, -37, 18, 43, -43, 9, -31, 15, 30, 14, -30, -11, 6, 15, 4, 48, -26, -23, -34, 14, -3, 2, -9, 43, -29, 16, -40, 21, 18, -20, 33, -22, -11, -3, -33, 5, -45, -38, -12, -29, 1, 16, -41, 7, -7, -6, -11, 26, 14, -27, -56, -15, -31, 21, -57, 42, -54, 50, -47, -10, -33, 10, -11, -12, 14, -45, -68, 47, -48, -10, -23, 0, -46, 26, -110, -28, -28, 37, 59, 38, 13, 13, 0, -12, -4, 16, -60, 1, 18, 28, -20, -10, -24, -34, 11, -8, -42, -34, -21, -10, -58, 18, 1, 29, -1, 6, 8, -11, 3, 30, 43, 5, -22, -65, -43, 14, 5, 12, -42, -32, 39, 18, -35, 0, -8, 2, 2, -15, -25, -30, -14, -12, -48, 1, -18, 1, 10, 38, -41, -29, 0, -13, 51, 20, 37, -21, -42, 33, -59, 17, -46, -26, -19, 6, -66, -25, 22, -30, -20, 5, -7, 14, -11, -30, -59, -20, -32, 1, -7, 15, -73, 21, -26, -30, 17, 28, -10, -13, -19, 22, -50, 33, -53, -17, 23, 24, -37, 27, 2, 19, 37, 41, -27, 17, -50, 4, -32, -14, -35, 40, 16, 2, -32, 1, -14, 2, 23, -19, -1, -10, -46, 41, -52, -13, -69, 12, 27, 21, -33, -1, 28, 8, -3, 2, -7, -1, 3, 6, -67, 23, -59, 0, 16, 20, -36, 16, -23, -36, 42, -16, -27, 10, -60, 18, -21, -5, -44, -26, -50, 39, -110, 3, -24, 0, 22, 45, -2, -32, -16, 29, -9, 4, -13, -17, 10, 39, -28, -8, 8, -25, -11, -1, 27, -42, -9, 4, -38, 18, -49, 15, -46, 41, -45, -18, -18, -30, -7, 39, -13, 16, -7, 39, 12, -28, -53, 17, 10, 20, -46, -6, -24, -10, 10, 31, 20, -3, -31, 11, 21, 5, -32, -20, 31, -21, -38, 26, -11, -32, -17, 5, 32, -7, 3, 31, -36, -15, -37, -6, 17, 40, -2, -15, -15, 16, 17, -13, 10, -21, -59, 18, -50, -33, 12, -2, -18, 23, -53, 39, -13, -11, -12, -19, -5, 22, -32, -23, -16, 10, -36, 1, -26, 29, -74, 7, -26, 3, -19, 17, -3, 17, -10, 40, -72, -59, -69, -17, 30, 10, -45, -20, 29, -28, 39, 8, -16, 11, -29, 44, -9, 16, -80, -14, -3, -26, -88, 36, -21, -23, 17, 6, 13, -24, -40, 50, -56, 14, -33, -7, -31, 1, -21, 39, -23, 25, 14, -9, 40, 8, -57, 4, -4, -8, -38, 37, -9, -1, -29, 27, 7, -4, 44, 3, 24, 15, -38, 12, -28, -32, -71, 0, -26, -5, -59, -23, -21, -13, -1, 14, 36, -31, -18, -2, -17, 19, -21, 7, -13, 10, -65, 28, -6, 12, 29, 19, 5, 8, 12, -5, -57, 35, -58, -6, -22, 2, -16, -39, -16, -37, 42, 32, 17, 19, 5, 25, -22, -8, -31, 2, -71, 19, -58, 4, 16, -14, 21, 9, -13, -27, -50, -8, 6, -21, -44, 34, -31, 16, -46, 16, 26, 1, -12, -16, -31, 33, 8, 0, -10, -5, 23, 16, -42, 36, -15, 19, 9, 21, 20, -20, 7, -24, 14, 39, -68, 14, -4, -5, -59, 4, -89, 5, -26, -34, 41, 10, -1, 14, -7, 29, -21, -10, -64, 36, 16, 27, -49, 32, -4, -26, -14, -12, 29, 5, 33, 40, -14, -42, -58, 14, -33, -11, -33, 42, 36, -17, -5, 1, -7, 28, 17, -6, -2, 22, -70, 32, 36, 28, -30, -11, -17, -31, -10, -10, 23, -21, 42, -5, -29, 1, 8, 39, 35, -17, -68, 38, 4, -33, 7, 23, 42, 6, -3, 30, -64, -14, -51, 31, -36, 39, -41, 28, -24, 13, 40, -8, 26, -3, -36, 56, -52, 37, -28, -13, -37, 34, -57, -3, 14, 27, -10, -13, 25, -36, 27, 13, -26, -10, -41, -20, 33, 2, -49, -4, 32, 3, 39, -34, -32, 5, 36, 3, -14, -8, -34, -26, 17, 19, -71, -24, 38, -8, -1, -4, -27, 17, -24, -26, -2, 18, -30, -25, -3, 18, -41, 8, 5, 18, -36, 0, 21, 27, -14, 20, -36, 3, -60, 8, -67, -13, -55, 
  -27, 4, 26, 24, 18, 0, 29, -38, -13, -25, 32, 38, 20, -29, 1, 11, 14, -21, -8, -33, 34, -18, -2, 15, -29, 19, 11, -53, -1, -27, -17, -18, 21, -24, 20, -45, -40, -1, 12, -4, 20, 16, 0, 11, 15, -16, -10, -22, 37, 8, -30, -42, 21, 15, 46, 13, 9, -8, 13, 22, -39, 9, 24, 5, 45, -3, 22, -54, -37, 44, 26, 13, -27, -19, 16, 5, -17, -40, 20, 28, -5, -8, 25, -54, -35, 0, -24, -17, -41, 37, 6, 18, -15, -40, 15, 34, 23, 2, -35, 15, -21, 15, 33, 23, 36, -23, -39, -32, 8, -79, -25, 11, -29, 1, -1, -15, -12, -24, -8, 27, -17, -16, 35, -11, -11, -13, 33, 18, 29, 9, -43, -7, -43, -20, 14, 32, -17, 12, 43, -52, -18, 46, -17, 30, -27, -48, 2, -31, -28, 17, -40, -19, -34, 20, 56, -36, 18, 65, 22, 57, 14, -6, -12, 8, -49, 10, -22, -55, -19, -6, 30, -16, -24, 35, -29, 37, 41, -32, -35, -25, -37, -32, -20, 10, 24, -28, -8, 19, -6, 15, -21, -6, 34, -9, -11, 18, 8, -10, 0, -26, 28, -29, -45, 59, -14, 14, 4, -1, -14, -17, 17, -34, -3, -30, 33, -35, 15, 3, -16, -32, -14, -43, 14, 8, -45, -10, 11, -39, 26, 19, -30, 12, 31, 23, 14, -31, 31, -1, 32, 12, 12, 28, 22, 15, -48, -1, 18, 30, 0, 15, 40, -15, 1, 1, -22, 12, -21, 19, 12, -37, -18, 11, 9, -32, 3, 28, -15, 8, 13, 24, -24, -21, 11, 20, -40, -15, -31, -37, 41, -28, -38, -16, 41, 13, 18, 42, 44, 23, -20, -38, 39, 10, -23, 23, -42, 30, -17, 6, -9, 38, -3, 30, -12, 15, 3, -19, -28, -11, -22, 37, 0, -5, 24, -18, -17, 11, 9, -67, -26, 16, 23, -13, -33, -6, -25, -20, -1, 2, -20, -25, 37, -8, -27, -16, -33, 10, 51, -34, -43, 34, -55, 28, -33, -31, -26, -29, 28, 1, 35, -39, -30, 31, 10, -21, -22, 13, -3, 30, -5, -8, -9, 14, 23, -14, 20, -22, -19, -9, 2, -29, -37, -13, -11, 9, -17, -23, 13, 18, -30, -16, 2, -8, 7, -28, -39, 13, 16, 24, 25, -35, -8, 21, 20, -21, -59, 23, 12, 58, 21, 29, -16, -35, 13, -15, 4, -9, 15, -13, -10, 10, -45, 5, 27, -2, -1, -8, 2, -6, -18, 15, -32, 31, 18, 56, -6, 15, -18, 33, 32, 1, -14, -16, 26, -1, -21, 2, -31, 28, 8, -28, 10, 40, 7, -49, -16, -65, -37, -15, 12, -11, -36, 9, -29, 46, -38, -55, -20, 33, 11, -12, 22, 16, 3, 36, -24, -32, -36, 14, -38, 30, -16, -40, -50, 24, 22, -69, 26, 54, -47, 22, 20, -17, 1, 2, -6, -19, 7, 13, -32, -6, -10, -32, 13, 38, -8, 30, -20, 24, -11, 9, -11, 0, 15, 10, -10, 33, -18, -4, 30, -61, 7, -33, -4, 22, -38, -42, -48, -5, 10, -17, -51, -36, 44, -71, 7, -31, -24, -18, 37, 21, -21, -33, -27, 21, -34, -53, -7, -37, 30, -55, -16, -50, -17, 6, 42, 1, -34, 35, -19, -8, 0, 1, -7, -20, 44, -21, 21, 11, 15, 21, 45, -37, 24, 42, 25, -12, -24, -37, -22, 23, 38, -9, 19, -13, 6, 30, 24, 26, 31, 21, -1, 38, 9, -17, 26, -21, -11, 3, 15, 16, -13, 15, -15, -21, 6, -56, 20, 22, 32, 45, -12, 41, -35, -10, 24, 6, -7, -50, 4, 38, 3, -42, -29, -3, 38, 4, 2, -1, -37, -18, 31, -22, -51, 8, 35, 54, -10, 0, 7, 16, 28, 3, -47, 39, 0, -37, 40, -42, 3, -10, 11, 33, -9, -24, 24, 18, 10, 0, 16, -27, 0, -19, -3, -103, -13, -8, 6, -21, -18, 12, 25, 38, 8, -20, 25, -17, 3, -36, -9, -23, -4, -15, 29, 44, -47, -22, 35, -6, -21, -29, 28, -1, -27, -20, -4, -10, -38, -2, -14, 5, 8, -25, -31, 1, -41, -36, 18, -24, -15, -29, 25, -42, -12, -29, -12, 17, -22, 5, 7, 48, -46, -38, -36, -12, 19, -3, 21, -56, -22, -10, 9, 8, 2, 25, 5, -1, -47, -22, 13, -19, 1, -3, 25, -51, 7, -47, 8, -42, -37, -6, 0, -8, -19, -34, -30, -9, 43, -43, 10, -7, 40, 15, -36, 5, -40, 5, 4, -27, -46, -19, -32, 7, -16, -57, 37, 8, 0, -52, 11, 20, -29, -44, -30, -27, 0, 8, 12, -8, 3, 5, -8, -1, -7, 32, -2, 9, 27, -35, 29, 11, -8, 12, 33, -11, 48, 6, 16, 45, -11, -5, 32, 16, -42, -63, 1, 13, -4, 4, -3, 19, 4, -40, -25, -85, -19, -8, 57, 19, -51, -50, -34, -13, 24, -5, -3, 11, 49, -36, -19, -30, 3, -17, 53, 42, 8, 26, -11, -2, 6, -15, 23, -2, -9, 2, 8, 9, -22, 17, 19, 19, -10, 9, -26, 40, 18, -1, -32, 28, 35, 20, -11, -11, -17, -52, 10, 0, -24, 6, -19, 34, 26, 20, 35, 15, -18, -28, 9, 12, -3, -38, 6, 3, 17, 27, 14, 33, -4, 8, 26, -32, 30, -40, 38, -50, 43, -40, 37, 29, -38, -10, 8, 9, -27, -33, -27, -22, 6, -48, -6, -6, -27, -22, 6, 21, 6, 0, -2, 21, 10, 30, -24, 21, 38, -58, 11, 4, 18, 13, -3, 18, 16, 51, -42, -6, -52, -57, 0, -56, 34, -35, -22, -2, 0, -55, 3, 9, -25, 36, 18, 19, 1, -5, 24, -21, 45, -6, -29, -41, 24, -83, 11, 28, -27, -30, -1, 3, 27, 15, -12, -3, 18, 5, 3, -17, -42, 34, -9, -12, 0, -43, 1, 3, 0, 29, 5, 60, 19, 1, 17, 21, -62, -17, 43, -6, -1, -26, -45, 42, -11, 28, 10, 22, 51, -52, -3, 18, 3, 32, 33, -14, 8, -48, -12, 37, 22, 21, 2, 49, 71, -5, 29, -61, -51, -3, 44, 28, -34, -33, -19, 10, -2, -8, 9, 3, 5, 14, -26, 16, -3, 6, -16, 14, -25, -3, -7, 36, -24, 28, 0, -32, 1, 21, 7, -46, -38, -54, -23, 0, 9, 7, 5, 43, -35, 3, -23, -5, -29, 2, -9, -60, -40, -20, -6, 39, -30, 36, 18, -11, -4, -26, -3, 15, 23, -13, -9, -31, -4, 38, -2, -7, 7, -18, -37, -12, -2, -4, -8, -20, 15, -58, -6, -19, -10, -34, 30, -20, -32, 22, -54, 4, -42, -17, 19, 9, 57, -8, 23, -42, 21, -49, 23, 2, -41, 17, 6, 16, -17, -15, 21, -6, 45, 6, 27, -42, 57, -26, -43, -58, -11, 42, -21, 8, -15, 0, 30, 39, -12, -32, -25, 3, 58, -70, 16, 60, 35, -40, 12, 22, 22, -8, -30, -18, -13, 11, 38, -26, -1, -6, 6, 33, 10, -52, -54, 59, 20, -25, -31, -16, 24, 20, 13, -113, -5, -9, 37, 41, -17, -19, -13, 5, 35, 4, -19, 16, 88, -55, 41, 15, 17, 24, -8, 0, -40, -25, -3, 32, 18, 3, -10, 19, 68, -42, -5, -92, 1, 23, 28, 27, -20, 1, 8, 44, -13, 9, 5, 21, -6, 3, 24, 28, -26, 18, 3, -1, 18, -43, -7, 1, 26, -34, -45, 22, 16, 14, 23, -11, 0, -19, 1, -11, -17, -41, 6, 39, -11, 20, -23, -26, 11, 34, 25, 5, -39, -49, 3, -8, 18, 29, -23, 39, -9, 3, 1, -8, -18, 33, 22, -64, 16, 7, -15, 28, 23, 42, -26, -6, 6, 2, -17, 9, -12, -49, -11, -27, 4, -18, -12, 17, -39, 30, 7, 34, -37, -24, -12, -23, -6, -51, 0, -101, -32, -47, -22, -34, 8, -1, -10, 22, -37, -48, -19, -7, 36, -54, -15, -23, 44, -39, 53, -6, -2, 10, -35, -8, -1, 18, -29, 31, -2, 2, 14, -29, 35, -42, 17, -7, -15, -44, 1, 52, 21, -9, -46, -44, -29, 9, 4, -65, -17, 50, 16, 35, -36, -44, -25, 5, 22, 20, -39, 4, 58, -49, -24, -59, -2, -33, 52, -24, 1, -33, -21, 0, 39, 11, -37, 13, 34, 17, 23, -94, 48, 29, 18, 48, -14, -19, -37, -4, -9, 19, -50, -26, 48, 15, -7, 6, -13, 40, 20, 31, -27, 2, -34, 11, 16, -30, -44, 1, 8, -18, 24, -27, 21, 48, 4, 7, -1, 3, 21, -26, 2, 16, 28, -18, -21, 1, -8, 2, -42, 14, 46, 35, -32, 10, -34, 44, 33, -24, 2, 21, -13, -34, 8, 41, 29, 49, 44, -29, -30, -27, 4, -6, 25, 18, -40, -23, 12, -47, 19, 5, 50, 2, -7, -16, -26, -14, -51, 10, -4, -43, -30, -42, 25, -48, 5, -7, 54, -43, 21, 23, -19, 36, 2, 18, -2, 7, -48, -29, 22, -25, 30, -47, 9, 4, -6, -40, -43, -5, 11, 2, -13, -62, -31, -52, 9, -22, 34, -53, 42, -63, -15, -49, -21, 5, 9, -22, -26, -45, -40, -50, 0, -46, 21, -45, 67, -26, 12, -5, 23, -14, -63, 35, 17, 13, 22, -2, 20, -23, 21, -18, 6, 19, 19, 5, -28, 8, -23, 18, -18, 0, -17, 38, 43, -18, 16, -108, 53, 4, 42, 20, -3, -16, -16, 9, -4, 5, -32, 19, 11, -12, 15, 14, 23, 69, 7, 24, 37, -12, -29, 26, -4, 39, -14, 26, -10, 22, 23, 18, 19, 32, -6, 18, -7, -33, -32, 7, 17, -24, -12, 6, -24, -20, -35, 14, -10, -9, -14, -19, -26, -15, -38, -6, -23, -2, 14, 15, 47, -6, -10, 17, 18, 16, 25, 17, -30, -5, -15, 5, 19, 24, -2, -6, 9, -3, -14, -39, -29, 14, 1, 22, -14, 1, -12, -13, -24, 13, 17, 1, -10, 15, -15, 22, 9, 25, 4, 15, -2, 13, -33, -27, -11, -24, 11, -11, 36, -53, -30, 22, 41, -4, -4, -23, -3, -18, -49, -1, -13, -9, 0, 5, 21, 10, -8, 6, 2, -34, 13, 20, -5, 29, -11, -18, -24, -59, -12, -4, 1, -35, 26, -45, -4, 18, -2, -23, -16, 3, 15, -19, -47, -26, 14, -34, -10, -53, -31, 81, -12, -70, -5, -35, -8, -22, -38, 2, 17, 7, -51, -36, 31, 8, 7, 11, -3, 10, 54, 6, 8, -10, -18, 15, 9, 7, -11, 17, 20, 35, 19, -95, 54, 30, 26, 51, 11, 26, 19, 17, 45, -11, 12, 26, 32, 15, 7, -39, 7, 26, -22, 1, -31, 7, 16, 17, -23, 25, -1, 5, 33, 7, -14, 22, 4, 28, 5, -13, 0, 9, -26, 0, -35, 2, 8, -9, -2, -4, -23, 4, -23, 47, 19, 5, 26, 20, -20, 22, -20, 26, 9, 29, 50, 0, 13, 34, 5, 16, 8, 6, 35, -2, 3, 17, 5, 20, -18, 20, -21, 19, 5, 8, 11, -17, -6, -31, -10, 10, 12, 9, -29, -28, 24, 27, -1, -48, -28, -57, -4, -22, 10, -13, 12, -8, 8, 17, -51, -19, 15, -1, 57, -38, 6, -40, 17, -49, 34, 16, 15, -25, 9, -31, -26, -7, 8, 8, -1, 34, -21, 10, 12, -22, 0, 11, 14, 17, 25, -30, -5, -3, -3, -21, 0, -12, -11, -103, -20, -44, 16, 5, -33, -23, -24, -16, -41, -56, -33, 1, -22, -59, 27, -18, 6, -56, -25, 3, 33, 7, 37, -36, -12, -27, 0, -12, 4, -1, -32, 1, 5, -20, 38, -34, 17, 37, -9, -34, 28, -15, 1, -1, -40, 49, 3, -1, -14, 65, 65, 6, 13, -8, -39, 32, 35, -8, -31, -1, -3, -3, -18, -49, 38, -3, 17, -6, -31, -12, -16, 32, -1, -28, 12, -3, 13, -18, 30, -63, -21, -9, -19, 10, -24, -22, 24, 38, 18, -1, 14, -15, 79, -16, 14, -58, 44, 37, -23, -8, -24, 1, 18, -12, 21, -28, -45, -7, 39, -46, -24, -8, 24, 2, 43, 6, 27, -40, -33, 28, -35, 3, 7, 20, 19, 15, -14, 26, -1, 7, 7, 29, -28, 4, -32, 35, -11, -6, 1, 15, 14, 0, 9, -20, -35, 45, 8, 5, 8, -19, -9, -39, -47, 2, -21, 3, 40, -28, 12, 39, -32, 14, 5, -22, -8, -21, 4, -41, 1, 17, -19, -61, 16, -20, 6, 4, -3, -20, 47, -5, 12, 27, 12, 5, -11, -20, -27, -44, 21, 22, -35, -65, 47, 3, -19, -16, -1, 39, 0, 6, -46, -27, -14, 45, -27, -58, -27, -14, 18, -48, -34, -35, -7, 19, 21, -38, -34, 2, 37, 37, 56, -12, 1, 0, -20, -5, -10, -38, 39, 3, -39, -16, 40, 53, -36, 43, -16, -24, -25, 8, 5, 2, 4, 19, -7, -26, -46, 12, 32, -20, -30, 14, -26, 58, -1, -4, 35, 5, 27, -7, 40, 6, -23, -16, 29, -35, -1, 18, 51, -20, 30, -71, 44, 27, 6, 18, -31, 11, 39, 42, 26, 4, 24, 7, 52, -37, 22, -99, -7, 43, 7, -33, 2, -43, 19, 12, 6, -1, 1, 15, 44, 11, -36, -60, -19, -17, 37, -30, 10, -20, -64, -34, -37, -45, -15, -8, 13, 12, -28, -40, 5, -9, -18, -5, -40, -21, -50, -31, -34, -46, -41, -42, -25, 20, -23, -54, -20, -24, 21, -54, -8, -36, -11, 11, -49, -25, 7, -21, 53, -56, 1, -28, -33, 50, 20, -59, -22, -17, -6, 20, -68, -19, -28, -44, -20, -46, 3, 23, 25, 32, 19, -51, -9, 3, -2, -19, -37, 31, 16, -44, 0, 29, -5, 56, 4, 10, -40, -49, -19, -18, -35, 13, -23, -62, 2, -39, -25, 15, -35, -31, 32, 16, 
  -7, 31, 8, -15, -24, -11, 6, 27, -13, -10, -4, -37, 21, -18, -43, -38, -4, 9, -9, 21, 27, 12, -37, -35, -12, -35, -36, -11, -12, -31, 20, -26, 8, -1, -29, -21, -43, 9, 6, -2, 28, 30, 22, -48, 24, -28, -42, 7, -23, -19, 15, 26, 23, -16, -42, -17, 14, 26, 25, -57, 9, -6, -2, -58, -27, 10, 8, -35, -26, 8, -2, -1, 24, -25, 26, -8, -48, 3, 10, -28, -14, 4, -11, -28, -66, -14, -5, 6, -22, -2, -29, 34, -22, 1, -59, 21, 11, -31, -53, -25, -44, 4, -20, 4, -5, 5, -42, 17, 16, -10, -15, 13, 25, 3, 2, -46, -70, 14, 26, -16, -52, -25, -33, -24, -22, 29, 1, 2, -8, 24, 17, -35, -21, -22, -10, -6, 9, -34, -7, -21, 8, -55, -51, -31, 31, 6, 22, -39, 2, -15, -9, 27, 40, -33, -39, 74, 23, -73, 12, -35, 27, -7, 3, -6, 55, 27, 7, 3, -19, -30, -16, 37, 41, -65, 1, 9, -42, -7, 10, 22, -19, -19, -22, -45, 20, 21, 51, 9, 34, -11, 13, 26, 25, -8, -17, 0, 9, 8, -28, -31, -34, 17, 36, -62, 31, -65, 9, 33, 21, -16, 6, 7, 3, 35, -28, -42, -20, 27, -26, -2, 27, 29, -29, -14, 6, 2, 3, 29, 20, 43, 26, 0, -38, -30, -7, 2, 23, -80, -42, -27, -30, 14, -46, 16, 11, -21, -48, -21, -20, -8, 32, -56, -26, -54, 11, -20, 8, 18, -16, -21, -1, 14, -23, -20, -25, 18, 31, 8, 8, -60, -17, 3, 28, 18, -38, -50, -20, -45, -1, 39, -33, -11, -18, 26, 1, -54, -65, 31, 50, 30, -40, -52, -50, -10, -2, -29, -2, -11, -21, 14, 34, -53, -46, -1, -11, 18, -45, -40, 23, 50, -37, -33, 2, 43, 51, 5, -1, 17, -35, -27, -11, 39, -42, -17, -28, -30, 22, 7, -43, -32, -67, 16, -1, 2, -14, -38, -31, 26, 15, -38, -2, 34, -29, 14, 22, -5, -57, 43, 29, 0, 3, -52, -33, -7, 22, 31, 4, 14, -16, 7, 47, 23, -34, 2, 6, -23, 8, -76, 2, -18, 34, -1, -27, -32, -19, 12, 15, 48, -20, 2, 11, -23, 7, -5, -18, 15, 13, 5, -17, -13, 13, -12, 32, -6, 43, -15, -5, -65, 34, 16, 3, 35, -26, -20, -41, 27, -5, -62, -24, 2, 57, 7, 28, -28, 9, -61, 14, -9, 21, 0, -21, 18, 25, -71, 23, 16, 6, -25, 39, 15, 45, -57, 14, 20, 8, -26, 41, 29, -20, 24, 41, 23, 47, 42, 27, -2, 2, -15, 39, -16, -18, -37, -8, -20, -15, -6, -9, 9, -29, 42, -25, -52, -40, -3, 8, 6, -14, -9, -2, 5, 33, -26, -23, -28, -75, 51, -2, -12, -25, -46, -21, 38, -16, -70, -32, 44, -10, 30, -40, 33, 37, -3, 4, -54, -35, 14, -2, -2, 7, -39, -37, 40, -20, 1, -39, 10, 18, -36, 14, 11, -21, 17, 7, 26, -41, 2, -22, -25, 29, 13, -54, -7, 3, 4, -12, 47, 21, -49, 33, 43, 0, 16, -20, 28, 28, 38, 16, -38, -69, 49, 15, -25, -5, -17, -14, 33, 15, 4, 30, 37, -2, 8, 15, 5, -17, 27, 12, -55, -19, -47, -7, 16, -15, -43, 6, 22, 13, 17, 18, 44, 36, 6, 5, -43, -11, -29, -15, -22, -1, -18, -26, -30, -24, -49, 15, 2, 65, -64, 22, 14, 24, 9, 5, -15, 9, 43, -15, -21, 1, -1, -42, -35, 7, -43, -32, 3, 51, -8, 3, -29, -17, 31, -9, -12, -20, -35, 13, 16, -15, 25, -24, -18, 14, -49, -36, 18, 11, -22, -19, -5, -23, 27, -18, 8, -28, 9, -22, -4, 41, -49, -4, 21, -29, -11, -27, 13, 19, -12, -8, 43, -9, 13, -32, 37, -16, -5, -11, 10, -19, -5, -13, 18, -9, 17, -26, 7, -29, 22, -12, 33, 6, -2, -15, 39, -22, -6, -35, -30, 17, -15, -47, 3, 6, -8, 11, 6, -36, 27, -32, -10, -4, -51, 22, 37, -3, 1, 5, 1, -14, 2, 26, 28, -21, 24, 1, 6, -27, -31, -41, -4, -18, -14, 0, 46, -35, 10, -14, 26, 5, 13, 33, -21, -29, -51, -26, -28, 4, 2, 9, 19, -18, 13, -22, 4, -44, 23, 12, -2, 37, -6, -5, 39, 44, 32, -20, -7, -19, 25, 0, 10, 10, 0, -9, 39, 24, -4, 46, -9, -4, -11, 45, 52, 11, 32, 21, -29, -12, 29, -32, -39, -22, -4, -12, 3, -12, -48, 4, -24, 37, -56, 22, -15, 11, 22, -39, 16, 4, -33, -33, -39, 6, -43, 16, -25, -44, -19, -29, 9, -31, -5, 8, -1, -35, -43, -3, -48, 11, 42, 42, 19, 15, 17, 5, 23, -27, 52, -4, -7, 33, -33, 8, 4, 14, 26, -28, 23, -1, -3, -24, 71, -69, -5, -23, 5, -33, -61, -50, -9, -12, -20, -9, -22, -2, 33, -31, 23, -79, 11, -8, 5, -4, -61, -32, -21, 35, -26, 12, 7, 35, -8, 17, -6, -58, 39, -3, -26, -48, -68, -48, -24, 21, 30, -29, 8, 3, 2, 1, 48, -5, 9, 6, -19, -37, -11, 0, -8, -13, -27, -33, 15, 20, -11, -7, 7, -57, 56, 52, -7, -2, -22, -24, 12, -27, 29, -35, 49, -36, -14, -32, 49, -43, 9, 45, 48, -18, -37, -31, 12, -12, 30, 13, -3, -13, -2, 17, 9, -74, -13, -2, 28, -22, -63, -43, -5, 51, -7, -8, -4, 20, 1, -4, 28, 12, 19, 42, 48, 7, -20, 45, -23, 63, 40, -5, -8, -6, 46, 2, 6, 3, 59, -26, -19, 12, -28, -38, -2, 16, -34, 3, -47, 14, -1, 4, 15, 6, -36, 2, -25, -3, -30, 15, 10, -1, 22, 22, -3, -4, 12, -37, -26, 15, -45, -19, 2, 12, -26, 10, -44, 37, -23, 24, -14, -4, 23, -28, -24, -31, 6, 8, 34, 0, -55, 2, 28, 27, 18, -31, -18, -53, 1, 20, 12, -53, -35, 21, 28, 18, -3, -18, -4, 27, -12, 2, -2, -16, -39, -33, -64, -17, 13, 21, -13, 9, -19, -28, 24, -10, 21, 17, 57, -9, 21, 35, 17, -56, 19, 28, 37, 18, -8, -9, 52, 10, 17, 28, 66, 42, -16, -38, 30, -8, 54, 38, 18, -54, -76, -64, 3, 1, 10, -69, -14, -19, 19, -18, 69, 9, 16, 67, 15, -19, -20, -51, -11, -17, -42, -28, 37, 8, 10, 26, -42, -62, 22, 45, 41, -19, -75, 1, 51, 31, 16, -30, 39, 17, 2, -10, 22, -3, 32, -31, 23, 19, -20, -24, -6, 6, 23, 22, 48, 13, 45, 1, 60, -16, -24, 32, -12, 3, -53, 0, -5, 59, 10, 24, 37, -23, 7, 35, 31, -3, 47, -7, -45, 6, -31, -44, -70, 5, -13, -42, -32, -35, -36, -48, 63, 2, 25, -60, -56, -25, -6, -31, -35, 25, 1, -33, 12, -21, -18, -49, 38, 36, -25, 1, -37, 15, 11, 28, -18, 21, -23, -43, -13, -60, 34, -52, -49, 0, 11, 32, -7, -8, -35, -55, -4, 45, 41, -21, 25, -31, 0, -28, 28, -55, 47, 12, 53, 24, -70, -38, 53, -3, -7, 17, 16, -8, -1, 37, -72, 11, -22, 28, 53, -23, -6, -31, 15, -21, 26, 17, 10, -30, 6, -6, -60, -40, -16, -6, 15, -13, -40, 19, 46, 9, 35, -25, 58, 0, 5, -4, 24, -48, -4, -17, -5, -22, -10, -55, 9, -9, -20, -18, 11, 10, -2, -14, 70, -44, 46, 35, 19, 14, -25, -57, 26, 55, 22, -40, -13, -28, 43, 25, -17, -29, -4, -24, 38, -37, -61, -39, 43, 62, 57, -28, 59, 38, 17, 21, 64, 5, 50, 12, 38, 32, -29, 4, 46, -6, 8, 8, 38, -61, 22, -15, -28, -40, -25, -3, -13, 34, 2, 14, -7, -7, 21, -3, 1, 14, -3, -24, 10, -35, -3, -70, -22, 26, -19, 23, -57, -40, -11, -9, -14, 3, 40, -23, 36, 8, 31, 24, 9, -27, -44, -46, -63, -42, 40, -45, 4, -31, 48, -43, 6, -29, -5, 21, -24, -38, -54, 5, 11, -5, -22, -40, -35, -24, 9, -43, -69, -74, -22, 1, 27, 0, -67, -18, -27, 2, -2, 4, -14, -41, 65, -41, -58, -45, -53, 25, 44, -2, -53, -42, -2, 15, -27, -5, -22, -51, 56, 12, -71, -59, -34, -16, 64, -5, -64, -30, 53, 26, 26, -34, 63, 58, 34, 16, 21, -40, 3, -39, 10, 12, -9, -37, 27, -3, 33, -44, 31, 27, 52, -22, 3, -11, 25, -34, -13, -17, -32, -7, -11, 22, 52, 24, -9, 8, 25, 9, 8, -33, 19, 47, 45, 0, -55, -26, 34, 55, 41, 6, -4, -13, 28, 4, 14, -52, 45, -29, 27, 2, -46, -32, -1, 45, 40, 18, 42, 8, 54, -23, -4, -34, 35, 48, -10, -19, -40, -49, -7, -4, -2, -16, 36, -45, 2, -7, 37, -17, -11, -21, 6, -25, 17, 27, 16, 29, 28, -6, 62, -25, 23, 27, -38, -18, 29, 2, -65, -13, -59, 3, -24, 6, 30, -45, 43, 49, 40, -44, -9, -23, 7, -29, -8, 19, -58, -7, -24, -12, 62, -4, 1, -2, 39, 12, 39, 15, -24, 21, 20, -16, -49, -41, 14, 33, -11, -49, -49, -37, 40, -2, -93, 30, -32, -7, 21, 21, -17, 7, -2, 38, -33, -27, -18, -21, 1, 11, -100, -26, -52, 26, 59, 27, -30, -9, 10, -1, -16, -35, 24, -61, 33, 22, -76, -32, -19, 52, 2, 22, -61, -7, 37, -13, -8, 9, 21, 5, 35, 44, -44, -2, 2, -37, 9, 5, -56, -22, 17, 38, 15, -3, 21, 45, -28, 27, 35, 2, 27, 31, 40, 4, -6, 8, 12, 6, 4, 27, -9, 18, 30, 12, 32, -43, 57, -23, 26, 23, -6, -37, 13, 21, 12, 18, 1, -48, -1, 12, 27, -26, -26, -36, 22, 10, -6, 31, -21, -20, -18, 4, 69, 24, 6, 18, 18, -37, -2, 6, -12, -16, 0, 32, -7, 52, 34, -1, 23, -15, 56, -24, 74, -32, -3, 60, -21, 53, -44, -5, 24, 37, 46, -12, 1, -23, 79, 36, -42, -37, -5, -4, -48, -12, -32, 42, -20, -10, 3, -14, 2, 14, -21, -4, 43, -29, -8, -26, -5, 6, -42, 0, -62, 28, 31, 21, 22, -2, 2, -52, 33, 6, -34, -6, 7, 36, 3, -24, -13, -2, 15, -16, 46, 30, 2, -38, 67, -27, -9, -8, -16, -18, -36, 4, -31, 10, -15, 6, 6, -27, 54, -12, -25, 54, -39, -11, 24, -2, -39, -34, -9, 11, -31, -50, -53, -43, -12, -28, -52, 8, 28, 59, 53, 1, -44, 11, 3, 32, 31, -26, -12, 10, -6, -18, -80, -4, 38, -12, 1, 25, -69, -37, 54, 41, -32, 26, 56, 70, -37, 12, -18, -17, 20, 21, 9, 7, -28, 12, -10, -12, 21, 20, -12, -7, 31, 26, 79, -14, 15, 42, 50, 5, -69, 7, 10, -2, 4, 17, 2, -6, 7, -5, 33, -17, 31, -33, 48, 13, 6, -14, 40, -29, -35, 18, 21, 66, -21, 34, 35, -36, 42, 31, 2, 2, 17, 12, -7, -25, 58, 4, 15, -28, 17, 6, 115, 8, 39, -5, 20, -15, 11, 2, -22, 16, 58, 16, 21, 10, 23, -18, 17, 6, 66, 30, -3, 22, -20, -10, -38, -4, 4, -32, -18, -31, -19, -41, -46, -24, -33, -36, -1, -10, -11, -21, 0, 16, -10, -4, 26, 29, -35, -27, -30, -31, 16, -38, 9, -44, -44, 3, -51, -26, 21, -35, -19, 50, -15, -45, 26, 36, -27, 25, -70, 33, -20, -39, -25, -15, 9, -58, 32, -14, 62, -46, 99, 23, 31, 7, -34, 49, 0, 14, -46, -2, 22, -19, -7, 1, 18, 2, 64, -2, 37, 63, 22, -3, 24, 0, -38, -2, 9, -14, -29, -19, 36, -27, -12, 47, 4, 3, -23, 22, 3, 16, 4, -10, 21, 34, -12, 1, 24, -2, -33, 45, -16, 43, 4, -19, 14, 20, 31, 8, 14, -34, 41, -13, 10, 11, 24, 52, -21, -3, -14, 10, -18, 9, 39, 27, -42, 25, 32, 22, -5, -17, -15, -34, -3, -3, 15, 10, 11, -23, -25, 37, -19, -12, 72, 5, -16, -22, 2, -27, 5, 22, 25, -9, 21, 2, 37, 38, 21, 29, 54, 16, 6, 1, 4, 0, 10, -34, -22, 21, 10, 11, 16, -31, 14, 38, 29, 27, 13, -6, 16, -12, 53, -41, 13, -45, -16, -51, -45, 23, 21, -35, -2, -23, 24, 18, 14, 5, 6, -29, -26, 10, -44, 34, -3, -1, 3, -7, 8, -5, 10, -14, -18, 19, -25, -1, -35, -37, 14, 16, -9, 5, -37, 21, 34, 40, -13, -11, 0, -41, -2, -15, -21, 18, -49, 17, -29, -13, 44, -48, 59, 1, -12, -31, 53, -41, 61, 18, -49, -27, -6, -32, -59, 14, -10, -61, 4, -48, -1, -28, 62, 10, -37, -27, -26, -11, 14, 20, -2, -10, 52, -16, 33, 0, 13, 8, 49, -15, -26, -8, 9, 13, 27, 80, -17, 32, -21, 14, 9, -27, -19, -21, 45, 40, -37, -48, -29, -14, 0, 48, -7, -15, 54, 9, 58, 56, 24, -31, 44, 28, -9, -12, 21, 53, 22, -12, -2, 18, -12, -8, -3, 22, -9, -13, 23, 0, 20, -9, -7, -2, -7, 0, -4, 28, 63, 27, 38, 12, 63, 6, -44, 25, -24, 6, 39, 4, -32, -9, -2, 16, 33, 11, 63, 33, -8, 10, 7, 27, 17, -43, 34, 29, -19, 3, 17, -15, 3, 23, -5, -27, 31, 8, -4, 9, 7, 
};
const TfArray<2, int> tensor_dimension5 = { 2, { 5,2304 } };
const TfArray<1, float> quant5_scale = { 1, { 0.0013811974786221981, } };
const TfArray<1, int> quant5_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const ALIGN(8) int8_t tensor_data6[32*3*3*3] = { 
  /* [0][0][][] */ -70,93,37, -1,-25,-127, 113,25,-97, 
  /* [0][1][][] */ -102,117,-34, 23,-42,-53, -63,-6,7, 
  /* [0][2][][] */ 127,-14,-3, 104,-22,-39, -89,88,-11, 
  /* [1][0][][] */ 42,30,-48, 117,-3,-116, 102,-59,-12, 
  /* [1][1][][] */ 37,-30,-84, 113,-85,-40, 59,88,-71, 
  /* [1][2][][] */ 87,-73,-127, 73,69,60, 23,-43,-38, 
  /* [2][0][][] */ 38,-108,-69, 91,28,-105, -35,-96,47, 
  /* [2][1][][] */ 25,-72,-74, -19,71,51, -35,8,-7, 
  /* [2][2][][] */ 61,127,-118, 106,-42,31, -52,104,-114, 
  /* [3][0][][] */ -87,118,33, 21,10,37, 78,-87,-1, 
  /* [3][1][][] */ -46,-20,127, -28,-48,20, -24,-59,42, 
  /* [3][2][][] */ -73,-79,67, 73,25,115, 83,-20,-58, 
  /* [4][0][][] */ -4,116,-66, 7,61,49, 30,127,117, 
  /* [4][1][][] */ 82,-15,73, 1,-53,117, -11,72,52, 
  /* [4][2][][] */ -40,96,-25, 61,63,93, -72,74,122, 
  /* [5][0][][] */ 73,-6,51, 123,44,-9, 27,-48,-104, 
  /* [5][1][][] */ 20,-75,-27, -74,-74,39, -61,-28,-81, 
  /* [5][2][][] */ 21,-127,-3, 41,84,57, 76,-17,63, 
  /* [6][0][][] */ -59,17,-82, 43,88,-61, -5,127,-27, 
  /* [6][1][][] */ 32,17,-19, 8,19,-75, 49,-53,51, 
  /* [6][2][][] */ -43,58,-69, 32,76,-24, -56,122,-115, 
  /* [7][0][][] */ 5,67,-11, 66,-29,90, 123,104,59, 
  /* [7][1][][] */ 127,15,-87, 103,-42,30, 18,110,90, 
  /* [7][2][][] */ 49,-78,-86, 78,-66,-19, 26,25,-33, 
  /* [8][0][][] */ 63,-74,-53, 121,-29,49, 127,-71,-22, 
  /* [8][1][][] */ -42,4,86, 2,-65,-44, -12,-113,42, 
  /* [8][2][][] */ 26,-5,-38, 55,-82,54, -54,36,73, 
  /* [9][0][][] */ 22,31,124, 62,43,104, 74,113,-1, 
  /* [9][1][][] */ 13,62,127, 114,-68,113, 103,53,70, 
  /* [9][2][][] */ 62,95,53, -70,84,85, -67,-49,72, 
  /* [10][0][][] */ -105,-104,-63, 39,-3,18, -44,-23,-93, 
  /* [10][1][][] */ -57,-83,109, -77,-16,-40, -57,14,-18, 
  /* [10][2][][] */ -36,73,-122, -88,-127,91, 30,-53,-5, 
  /* [11][0][][] */ 117,-98,43, 127,-4,92, 24,47,-48, 
  /* [11][1][][] */ 117,7,114, 99,-100,103, 101,-2,42, 
  /* [11][2][][] */ 101,-119,-72, -4,-48,28, 81,-62,-29, 
  /* [12][0][][] */ 73,-41,-11, 85,-52,-44, 67,-63,-89, 
  /* [12][1][][] */ 127,61,-5, 24,-11,-102, -50,99,-31, 
  /* [12][2][][] */ 18,-90,-65, -29,26,-15, 12,-15,-90, 
  /* [13][0][][] */ 9,-5,-53, -3,96,64, -48,55,25, 
  /* [13][1][][] */ -41,-44,99, 84,-45,-21, -94,33,127, 
  /* [13][2][][] */ 57,106,61, -25,-73,110, -41,-10,120, 
  /* [14][0][][] */ -36,9,127, -18,-5,57, -63,-47,115, 
  /* [14][1][][] */ -51,-21,78, 0,23,68, 58,-32,18, 
  /* [14][2][][] */ -52,89,112, -19,73,59, -48,11,-32, 
  /* [15][0][][] */ -65,-54,38, 118,40,-29, 82,113,-85, 
  /* [15][1][][] */ -49,10,-4, -7,-20,-16, -33,111,112, 
  /* [15][2][][] */ 79,105,-100, 22,39,57, 24,127,82, 
  /* [16][0][][] */ -56,50,11, -12,-46,1, -57,-63,113, 
  /* [16][1][][] */ 23,77,99, 127,-36,18, 118,-95,-56, 
  /* [16][2][][] */ -21,-70,5, 106,-75,-25, -16,32,-88, 
  /* [17][0][][] */ -51,22,4, -32,52,-65, -11,0,-43, 
  /* [17][1][][] */ 17,27,79, -19,-14,-34, 67,-7,-46, 
  /* [17][2][][] */ -24,127,34, -9,5,-43, -64,-48,44, 
  /* [18][0][][] */ -43,-97,29, -12,-27,-16, 38,-83,-21, 
  /* [18][1][][] */ 61,-34,-27, 105,49,-84, -36,-83,-30, 
  /* [18][2][][] */ 39,-22,106, 127,33,20, -9,-38,85, 
  /* [19][0][][] */ -33,-3,63, 76,-89,120, -30,9,6, 
  /* [19][1][][] */ -21,14,106, -104,-47,16, 58,-24,107, 
  /* [19][2][][] */ -6,67,127, 56,13,93, 26,-77,-59, 
  /* [20][0][][] */ -67,46,32, 6,18,29, -4,33,-67, 
  /* [20][1][][] */ -73,-10,-93, 5,-61,-47, -60,-39,97, 
  /* [20][2][][] */ 86,62,95, -91,77,-30, 28,127,33, 
  /* [21][0][][] */ 17,-42,35, -50,-48,111, 96,87,2, 
  /* [21][1][][] */ -59,-108,62, -61,-41,127, -68,48,93, 
  /* [21][2][][] */ 41,12,12, 64,-26,55, 72,9,107, 
  /* [22][0][][] */ -84,112,-39, 65,-13,2, -77,-127,-23, 
  /* [22][1][][] */ -51,-25,-45, 48,-107,-115, 116,-96,10, 
  /* [22][2][][] */ 37,1,76, 127,33,-6, 18,-22,77, 
  /* [23][0][][] */ -29,-5,-49, 2,102,127, -57,-43,8, 
  /* [23][1][][] */ 44,5,96, -27,88,63, 101,94,76, 
  /* [23][2][][] */ -108,61,-55, 62,-76,-12, -42,11,119, 
  /* [24][0][][] */ 79,96,100, -88,-24,62, 22,40,83, 
  /* [24][1][][] */ -119,-43,-94, -10,127,-5, -44,-3,116, 
  /* [24][2][][] */ -87,-36,64, 19,-14,35, 104,-84,-60, 
  /* [25][0][][] */ -29,-107,-75, 105,-24,-72, 39,-59,-42, 
  /* [25][1][][] */ 54,42,-54, 95,-103,-48, 74,-96,96, 
  /* [25][2][][] */ 121,121,127, -79,-19,89, -89,10,-100, 
  /* [26][0][][] */ 89,106,127, -96,90,88, -88,44,85, 
  /* [26][1][][] */ -21,69,-55, -57,-26,69, 0,100,65, 
  /* [26][2][][] */ -73,17,16, 39,-13,-21, -34,29,58, 
  /* [27][0][][] */ 126,94,-12, -40,-23,-100, 4,37,-13, 
  /* [27][1][][] */ -47,-54,8, 79,127,-105, -59,23,-91, 
  /* [27][2][][] */ 28,-58,-74, 61,107,-99, 102,-69,67, 
  /* [28][0][][] */ 87,28,127, -50,-52,-66, -13,-71,-87, 
  /* [28][1][][] */ 86,-16,-43, -89,-66,77, 118,29,72, 
  /* [28][2][][] */ 43,-13,77, -32,-84,-95, 54,-120,28, 
  /* [29][0][][] */ 16,-13,6, 23,102,-30, -50,75,61, 
  /* [29][1][][] */ -28,125,48, -100,13,-91, -77,78,76, 
  /* [29][2][][] */ 54,55,-75, 95,127,99, 15,-18,-14, 
  /* [30][0][][] */ -64,61,80, 49,-39,100, -21,-74,114, 
  /* [30][1][][] */ 80,76,-61, 38,110,127, 35,-44,-9, 
  /* [30][2][][] */ 55,53,26, 42,41,38, 61,8,18, 
  /* [31][0][][] */ 77,52,25, 40,-61,127, -50,-36,-16, 
  /* [31][1][][] */ 50,57,90, 38,-84,-47, -34,-26,34, 
  /* [31][2][][] */ -60,-68,-12, 77,-36,51, 2,-30,69, 
};
const TfArray<4, int> tensor_dimension6 = { 4, { 32,3,3,3 } };
const TfArray<32, float> quant6_scale = { 32, { 0.0012283526593819261, 0.001342603238299489, 0.0011738264001905918, 0.0012533534318208694, 0.0014101333217695355, 0.0012220366625115275, 0.0012719044461846352, 0.0014300246257334948, 0.0012787367450073361, 0.0012794854119420052, 0.0010365234920755029, 0.0011952453060075641, 0.0013906733365729451, 0.0013696812093257904, 0.0015648618573322892, 0.0012032543309032917, 0.0011882887920364738, 0.0014346939278766513, 0.0012435105163604021, 0.0014385448303073645, 0.0014269136590883136, 0.00126467808149755, 0.0012010463979095221, 0.00133551936596632, 0.0011612584348767996, 0.0011786130489781499, 0.001354045351035893, 0.0013531646691262722, 0.0012333585182204843, 0.0013166209682822227, 0.0014332564314827323, 0.0015575148863717914, } };
const TfArray<32, int> quant6_zero = { 32, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const ALIGN(8) int8_t tensor_data7[16*3*3*32] = { 
  /* [0][0][][] */ -70,-44,-60,103,-30,-60,41,-47,95,-15,-78,-21,-57,-66,69,-48,13,-56,71,76,53,92,72,19,122,-39,-41,49,26,-39,-60,108, -10,-4,33,35,-31,-27,-72,-84,-38,40,-82,36,48,88,59,35,-11,-10,-71,102,67,-47,25,81,65,-6,-36,-24,30,-49,-86,-42, -86,-11,-58,61,-29,52,5,90,-30,75,66,61,-84,22,-3,53,50,-32,63,36,43,82,-57,61,74,-49,52,-86,-76,-42,-52,39, 
  /* [0][1][][] */ 36,-65,-99,91,48,-16,13,-93,-27,-18,-72,-35,-93,-37,65,55,-20,76,-49,61,96,84,9,-3,82,4,5,6,42,62,23,-64, 1,-99,-20,-14,15,26,49,13,41,80,-16,-49,-127,28,82,66,52,-76,-14,41,-59,60,30,10,-24,-65,-67,-97,-38,-44,-3,-24, 23,1,-45,90,58,74,-16,-72,-35,71,72,71,-92,-1,34,81,-80,2,72,18,-52,1,20,81,93,-6,84,30,-52,17,-6,73, 
  /* [0][2][][] */ -6,-39,-97,-24,-84,78,-10,39,-76,-42,87,-49,-98,-56,-52,-13,-2,7,45,50,44,-13,22,-19,-56,-21,-17,-14,78,-34,-100,-73, -37,-76,-88,-21,2,-31,28,73,-31,-38,79,90,-6,-59,10,46,16,-24,51,43,36,18,-4,46,105,-51,-27,29,-25,-76,-90,13, -67,17,23,41,-6,99,-52,82,87,37,59,88,58,52,-4,78,20,-29,34,88,98,100,-15,88,56,-94,78,-73,-5,-49,-19,79, 
  /* [1][0][][] */ -77,51,-113,-52,26,-59,68,37,-113,-20,-34,16,-112,64,1,4,17,63,-8,94,76,1,-94,41,92,-122,21,41,-13,52,31,2, -61,24,36,11,43,-41,-44,-46,-74,6,85,-7,-78,-17,115,98,55,-1,35,83,-47,29,-76,-21,-42,23,2,-34,-43,-48,-34,1, -58,2,-26,40,77,-62,88,-11,-60,69,36,-34,-29,104,110,10,64,101,-78,-23,85,-22,38,81,25,12,70,-47,-126,-59,-21,-38, 
  /* [1][1][][] */ -91,-13,-39,-42,56,-43,17,-62,-12,42,7,-44,-15,91,95,2,-50,-43,-60,75,-15,48,-12,33,21,-74,106,-38,-45,30,-28,-68, -102,-17,11,8,56,-109,18,13,-80,16,49,-48,-26,68,86,4,-17,-83,-127,87,10,-22,-67,89,85,-95,44,-2,9,-57,48,52, -23,-82,-50,-24,-20,-63,70,33,-47,-6,-4,-27,4,-9,96,91,30,-11,11,-14,-16,57,-65,82,-57,-58,61,50,17,42,95,-31, 
  /* [1][2][][] */ -14,-4,-51,-10,98,-116,88,31,-61,16,-69,75,-109,6,-27,-30,34,8,-63,-53,48,-8,-30,-59,4,-66,-4,-5,-122,68,83,9, 70,-67,-63,59,75,-97,33,57,-117,84,-60,-40,10,56,86,-21,-76,-57,-50,104,43,-29,-110,104,92,28,46,-83,-77,84,-66,-26, -40,-80,-11,-36,61,-77,-21,40,-14,74,11,-36,-1,33,20,-66,30,30,-110,-5,-36,-15,-91,33,105,8,76,-96,20,95,75,87, 
  /* [2][0][][] */ -32,80,-47,-58,20,58,-22,-58,24,5,-18,81,33,-62,-87,76,1,-59,-50,-95,33,9,34,19,40,60,83,117,14,93,13,-66, 81,-3,-55,-52,33,-56,-2,23,-3,-7,56,73,9,12,-104,73,56,46,49,-66,44,55,35,2,7,-10,-13,66,-6,81,-4,-49, 51,100,66,-59,-55,-28,63,79,-81,-72,-53,-2,83,21,-92,21,72,54,-1,29,-44,2,-22,-71,20,-63,63,99,10,65,75,11, 
  /* [2][1][][] */ 0,89,-26,-5,7,61,1,-55,42,-26,-80,-18,22,37,-104,-47,8,-57,-106,-47,-2,-63,-22,66,67,23,43,94,3,44,12,75, 6,54,-26,25,55,-10,0,-4,-77,21,-52,6,-61,10,-16,-60,-14,-41,-94,-108,45,-99,-70,-74,-101,-85,-23,-34,-108,-11,57,5, 103,-34,68,10,50,31,74,-10,14,-6,-64,-73,12,-93,-38,88,-54,-7,10,-54,48,-52,33,28,-6,-22,-57,-11,-113,35,-78,-38, 
  /* [2][2][][] */ -1,89,78,22,-28,100,23,-60,18,-37,-36,-19,91,-83,-113,-17,-31,57,62,7,77,-72,21,16,62,63,9,47,-8,68,-73,-101, 44,-5,-56,-110,11,-56,24,70,-97,72,24,71,98,-14,-59,38,6,37,34,-15,-25,27,-6,-24,29,-11,47,71,-36,29,17,-120, 112,11,-18,21,-11,-3,127,86,-5,-28,64,-29,72,-37,39,-24,40,67,-49,-93,28,-64,-10,23,-33,-75,-24,74,1,53,-12,-61, 
  /* [3][0][][] */ -42,56,1,12,-31,96,-27,97,22,-13,18,102,107,48,50,-7,72,-102,66,14,-83,48,70,-54,-23,-38,-56,97,97,-39,4,100, 19,105,71,28,-35,35,16,32,33,-23,-31,49,41,-40,-11,18,-25,-112,66,73,-112,55,-51,-99,-108,63,27,70,-14,-50,77,-14, -33,67,74,-81,-18,103,44,92,80,-75,-71,103,8,-81,14,-61,30,-93,122,60,31,52,-1,-69,-69,28,-22,14,80,-74,2,123, 
  /* [3][1][][] */ 12,-32,58,72,-73,96,27,-2,29,80,-47,51,13,-32,-46,-16,7,-62,60,46,19,38,37,-37,-83,75,-108,-38,-19,64,-71,27, -24,96,-44,-1,-74,-39,-63,-24,116,4,0,59,117,2,-102,-33,84,-24,-34,23,22,35,-35,8,30,-47,-108,-56,19,-67,44,-72, 89,85,44,20,-84,3,-34,8,-2,-38,-77,40,59,34,-3,-15,-11,-92,108,-51,-95,-37,105,39,55,11,8,44,65,-89,-77,9, 
  /* [3][2][][] */ 3,39,-17,-23,56,-35,58,-3,64,30,64,-29,51,40,56,82,41,51,40,-57,-77,-12,21,-71,-75,0,52,92,27,49,-54,-82, 12,-26,-59,70,-39,59,19,108,22,62,-27,-25,118,30,6,14,36,-88,118,-28,-30,94,35,20,60,34,-94,-49,-5,-32,-5,-18, 51,11,6,10,12,100,61,23,31,82,-62,36,25,44,-41,88,22,-127,-38,73,-49,-63,51,-22,-17,-11,-64,60,-25,-30,-51,27, 
  /* [4][0][][] */ 43,52,93,-13,48,-23,-2,72,-86,-2,14,-1,19,-74,3,96,122,-58,95,60,-45,67,-39,62,-53,69,-100,31,-53,-3,-58,-63, -23,-5,2,-69,53,65,-40,9,-38,-66,-26,83,-27,-42,-27,8,43,-35,24,-3,-91,-27,-30,-7,-13,48,-102,80,-70,-19,-14,37, 9,89,87,-18,71,7,4,-29,-73,3,-55,-40,80,-45,-14,5,45,-16,81,-77,29,-16,80,-53,-112,47,27,77,-43,-39,-11,2, 
  /* [4][1][][] */ -42,19,75,-52,-56,10,-15,69,-23,80,40,55,34,-1,-86,-34,16,38,74,-35,-71,-32,-34,-52,45,9,-35,97,51,40,2,-21, 14,94,-70,-19,-65,90,103,-15,-6,17,35,-18,-6,-35,-76,68,-33,69,-24,30,-64,0,55,-23,-42,20,-90,92,-50,69,76,-17, 90,-35,81,-25,-53,-52,112,-35,82,-15,37,82,73,-73,31,-28,-26,-64,85,-68,-101,-91,22,60,-42,-18,11,45,41,-27,-19,-41, 
  /* [4][2][][] */ 54,61,-48,-72,33,6,63,7,-28,-21,34,76,79,39,5,-9,63,-19,-67,-17,-95,75,13,-5,-52,34,67,-23,37,-58,82,-12, -27,-4,-64,-18,59,95,51,74,23,79,-13,44,127,-57,36,24,93,42,-70,-96,-105,-85,26,65,-5,-25,-50,70,-28,65,83,61, 94,8,15,30,11,-17,96,78,16,-7,37,-33,14,-63,-34,-9,18,41,-21,-86,-55,7,-81,-86,37,48,-80,-18,10,15,-45,25, 
  /* [5][0][][] */ 12,-74,-106,69,86,77,-32,73,-57,-45,-73,45,-27,115,-23,-39,-29,9,20,37,73,36,-79,82,-37,32,71,-27,-71,-24,12,91, -43,-44,-58,-19,52,-28,-78,-73,-58,107,-1,26,-97,55,123,55,-70,-65,-2,119,-32,110,-100,14,12,55,43,-79,81,80,75,25, -95,-29,28,70,34,45,11,-19,-39,-39,17,-37,7,-48,-8,-50,-13,79,-64,119,4,-53,21,26,24,9,17,49,33,69,-28,5, 
  /* [5][1][][] */ -14,-86,-26,-54,62,47,-92,40,45,-26,76,-18,-13,-11,-7,-13,-54,89,-41,33,-84,79,-84,27,12,36,3,-31,24,-66,-62,-47, -42,-92,-80,102,78,-37,-14,4,-61,22,-50,-3,-127,103,87,-62,-42,41,-85,104,-29,-11,-37,10,68,-7,20,-91,99,-33,40,-44, -111,-102,6,-43,-34,-91,16,18,-60,35,-76,62,-83,-1,16,-17,-12,-13,-58,36,54,82,-9,-15,40,-8,-11,-113,104,-59,52,-45, 
  /* [5][2][][] */ -106,-100,-100,-25,95,-15,-122,4,-14,-16,50,72,-35,-37,42,-28,67,-25,-106,34,-49,28,-9,109,-19,4,29,8,-65,93,88,82, -40,-90,-88,-5,-31,66,-89,15,85,-30,25,71,17,-7,68,79,97,9,65,80,17,79,-79,-37,-45,-25,103,-77,49,-42,88,-35, -1,-37,-18,97,92,-19,-16,21,51,29,51,-79,-34,21,67,-39,52,-22,-7,72,79,73,-48,81,89,9,47,-41,17,33,83,61, 
  /* [6][0][][] */ 84,12,60,72,36,30,-3,65,-14,12,32,-83,-26,103,-20,-56,-64,97,-21,-35,99,-35,-27,7,47,-19,32,-45,-112,47,24,-73, 88,-28,-55,17,21,-19,103,-70,-116,25,-9,-22,-52,67,44,-49,-37,43,-12,2,90,75,-54,111,76,41,-22,-27,-126,111,-10,21, 34,2,-61,44,79,6,42,74,-127,80,84,-68,-36,-12,42,88,-71,8,-78,-40,93,71,55,36,20,-107,124,-45,-5,-38,-54,-25, 
  /* [6][1][][] */ 4,-21,27,-95,35,10,93,-39,-24,26,78,13,2,36,-21,-47,-54,77,-5,-79,-5,6,-93,-19,57,-90,-39,11,-65,82,62,15, 39,33,-109,-34,80,-74,101,62,2,15,-76,-48,-91,-29,93,13,-79,-22,8,62,101,-62,-53,39,88,-94,89,68,-42,-21,-72,-20, 25,-82,-56,32,53,-45,-19,47,-103,45,44,55,-63,84,11,27,-14,69,-71,-2,-20,66,-68,85,73,-22,100,-4,-86,11,-24,-84, 
  /* [6][2][][] */ 72,10,88,39,16,-29,82,7,-99,26,50,-22,15,-10,-109,-26,-36,106,15,-79,18,-45,-9,-29,19,-80,-25,-53,12,-35,15,-87, 7,23,-6,-37,48,-41,-59,-46,-40,12,-25,-70,-65,-65,-78,-13,-63,21,-5,-6,119,-86,-10,59,-28,-20,-6,37,-7,23,-4,-10, 80,60,42,-99,95,-2,94,11,-115,-45,76,-89,-41,-26,83,-41,-19,116,57,-36,25,-49,-72,53,-6,-97,-18,23,-84,1,25,-91, 
  /* [7][0][][] */ -19,-41,90,-31,-31,58,90,26,1,-64,-43,16,80,36,16,-70,-105,-29,-72,-9,62,-1,-70,51,13,15,-44,47,38,73,-3,-35, -10,58,75,20,28,-42,45,-7,3,-72,-44,65,66,-32,-24,-50,18,89,44,-11,54,-77,-88,54,-72,-25,1,77,-92,-21,-37,-37, 57,19,89,-74,17,10,23,40,-63,-33,65,-36,-26,-84,-5,-14,-66,-4,-71,-53,89,-47,-68,75,20,-65,-39,40,-8,-34,18,-20, 
  /* [7][1][][] */ 41,52,-41,-29,36,-40,-27,-27,-53,-11,-34,-56,-43,7,36,-35,6,9,-78,-79,53,23,-75,52,55,-40,7,69,-7,66,22,-12, -27,-48,44,-22,6,-83,102,60,-85,-27,-34,-45,55,35,-10,12,26,127,-61,-78,56,64,35,69,54,-66,-12,15,55,-64,-90,-63, 70,31,-11,-68,89,-64,-31,65,31,87,-78,61,-56,-11,39,64,50,50,36,-74,68,79,-48,62,72,51,6,84,47,-8,-23,0, 
  /* [7][2][][] */ 63,19,80,-73,64,11,116,-47,18,-1,-41,-92,56,70,-29,9,-65,35,29,5,-29,-81,28,-31,-19,-51,73,47,34,-43,19,27, -31,-7,98,-66,33,-31,-34,-10,-77,23,46,-76,-4,-1,54,72,-92,71,-47,-54,13,-37,-48,3,22,45,42,92,73,48,-39,-50, -16,-48,-14,-50,-57,21,77,-33,4,34,47,-67,-69,-34,-73,36,13,90,3,-47,11,13,17,75,46,-34,-1,32,47,49,-66,-80, 
  /* [8][0][][] */ -48,-21,63,-24,-29,-12,13,99,-13,-15,-69,106,107,20,53,70,37,-76,48,-94,-58,-62,89,20,-65,-61,-82,-19,20,-73,30,19, 86,-17,13,-29,59,67,-20,88,-47,66,-34,78,1,-36,57,14,36,-13,-62,68,-112,-94,32,0,-75,57,-7,-37,-40,-59,-57,-72, -13,17,-48,-31,-71,-51,-24,-23,36,-44,29,-54,-13,-16,-39,68,72,-86,56,-31,-11,-96,39,50,46,80,42,3,-87,-80,67,-70, 
  /* [8][1][][] */ 17,63,-40,19,-34,-22,20,-48,-66,54,-30,44,109,7,-80,16,-24,-34,80,26,68,-59,-24,-13,-77,-40,-66,-49,1,96,64,-48, 86,29,-26,75,10,102,76,-58,84,-33,15,30,12,-95,-21,4,-46,-68,45,-40,7,22,72,76,32,109,-75,52,-39,-12,76,46, 103,51,80,13,22,-35,-57,69,-45,65,-9,66,61,66,-33,88,-86,-12,37,-72,-63,-80,58,-82,5,81,-77,-33,-17,55,-79,-1, 
  /* [8][2][][] */ 95,-19,-94,106,82,85,32,90,-60,49,-60,54,100,43,91,-7,81,-103,-3,-60,-65,11,-60,-87,-89,-45,-76,-15,-34,28,0,84, 17,88,-72,-95,99,-71,54,75,-62,-60,-56,-37,43,-37,51,12,98,-63,87,77,-24,-11,-70,-14,-109,-11,-32,104,-33,75,91,-32, 98,-40,60,-10,-89,-70,-27,-10,-28,74,-1,-41,127,-51,7,-46,-4,9,-22,-68,10,17,-14,-5,-120,109,30,83,58,-48,3,79, 
  /* [9][0][][] */ 6,-68,44,-26,70,65,-65,-22,-45,87,80,-79,6,43,91,-41,-84,54,67,14,56,-34,35,38,-64,70,58,94,55,27,-15,-26, 31,35,32,9,-27,68,64,-6,-51,-34,-21,-21,45,26,-85,32,-13,56,1,-32,10,43,25,70,-57,-23,-61,-39,76,-23,23,89, 85,-91,-64,-78,16,31,38,-54,-54,38,51,-88,-45,20,-70,-68,-48,121,14,-53,88,-77,19,-19,64,54,79,74,-58,65,-69,5, 
  /* [9][1][][] */ 19,53,103,50,86,-51,35,-24,11,21,-50,18,35,-35,-33,-31,-74,103,-40,34,46,-50,80,65,-58,-32,49,-34,-31,53,16,77, 106,-25,-47,-40,-88,-11,31,-30,45,22,11,-94,-56,-61,77,15,-56,9,40,-97,80,-55,63,-33,-73,24,-24,-42,39,27,-81,-81, 8,25,-2,-55,-56,-50,66,-44,-60,-37,-17,-34,-101,56,-26,41,23,-15,-30,-20,-19,-44,-69,-42,87,-29,3,1,24,-19,-1,-50, 
  /* [9][2][][] */ 59,21,-15,-22,66,13,59,-9,11,57,0,-73,44,3,4,-9,119,113,52,-19,127,13,52,107,29,87,3,-46,13,42,-15,-40, 119,-25,37,-19,91,-9,58,-75,-87,-36,-18,4,37,-28,34,68,-27,83,61,1,-8,18,73,53,39,48,68,33,-52,4,-57,-31, 112,-40,2,-44,54,11,-3,-48,-20,-4,52,-82,52,-23,14,99,31,123,-32,26,88,49,60,39,65,14,52,-57,-22,-32,-20,14, 
  /* [10][0][][] */ -4,6,50,46,7,-43,-60,29,116,25,10,39,83,59,108,-61,67,24,31,-35,-7,4,99,-11,77,110,65,48,6,-25,-32,90, 4,-86,-44,42,0,-13,-113,-3,-26,68,38,-53,34,-37,28,63,52,-15,-30,98,31,24,39,28,66,-3,62,-15,-9,12,-3,12, 20,8,66,-16,-61,-41,-84,-68,37,-54,41,34,-35,-11,-22,-13,113,-1,30,-44,23,45,91,-72,3,-24,60,-3,103,23,-34,114, 
  /* [10][1][][] */ 30,-5,33,59,42,83,-68,79,83,67,-55,-14,-15,106,34,-22,118,-36,95,57,-47,-38,95,2,61,72,-21,33,-15,72,66,68, 77,-48,57,43,-65,111,-24,-77,22,-12,-10,-6,-12,-40,107,-78,22,76,78,17,-30,-31,-20,1,-40,47,50,10,127,-68,-48,14, -10,-21,33,70,-46,-18,-51,15,81,-67,3,31,-66,-11,37,-8,-3,-8,-13,77,-47,-28,62,70,-43,39,26,-67,94,-80,31,-59, 
  /* [10][2][][] */ 57,-4,-32,79,-55,89,-41,16,-17,-14,-55,48,39,86,74,-45,116,-31,95,93,16,91,-1,53,78,-24,46,73,125,7,49,51, 14,0,-11,92,38,-3,5,25,4,12,-56,70,12,-40,-26,36,67,25,83,-38,-51,-64,66,68,62,-32,-61,-60,-18,13,-60,88, 63,9,-29,29,-38,89,-45,-62,11,19,60,29,34,26,-18,-75,112,-44,77,39,-36,19,-35,-75,60,84,-31,35,110,-12,-58,60, 
  /* [11][0][][] */ 33,-36,-2,17,-3,-66,97,13,-66,72,52,-34,-57,-29,-21,104,13,36,-84,30,100,-79,43,43,-40,13,-17,59,-21,84,13,-16, -21,-28,62,-4,4,0,66,-49,-2,-27,-27,-46,-3,15,-12,46,-121,-59,-43,37,90,23,-6,-52,-59,-19,31,20,-67,-17,-40,-68, -37,27,71,46,79,-11,97,-12,7,48,-24,-69,-23,-33,-86,45,48,-3,43,-27,37,-18,-87,19,-21,68,115,110,-9,109,103,34, 
  /* [11][1][][] */ 94,40,-75,-19,-40,2,122,18,25,-73,-57,-79,-86,58,-61,40,-62,-44,-105,-22,48,-2,48,-37,-32,30,-23,8,-2,15,-86,-86, 67,-17,-55,-112,93,-64,1,50,-86,-62,21,-69,48,-34,-84,34,-63,-54,-73,-78,-51,-84,-41,-47,67,-28,15,21,-89,35,40,-22, -40,-7,-12,-89,94,-60,86,-10,-107,-26,3,-25,42,-41,-53,-51,-113,-29,5,-11,-34,-14,9,37,44,-7,110,30,-64,62,92,0, 
  /* [11][2][][] */ -11,-11,-40,-69,47,-88,4,-12,-38,79,79,-80,-62,-50,10,11,7,65,-40,-52,-49,36,3,-29,-68,-49,-19,83,58,81,-58,-117, 66,2,-72,-50,-27,73,44,63,-121,-29,-72,73,81,18,-101,-30,18,46,-103,-115,-17,59,-46,-5,30,-9,-35,71,-10,-26,-76,4, -11,62,80,-40,32,41,127,68,-76,-56,-69,-2,15,-5,48,40,-12,-33,32,-43,-11,16,-65,-49,52,-18,-32,-18,-45,29,44,2, 
  /* [12][0][][] */ 30,-12,-118,-10,54,52,-9,-65,-16,11,78,9,20,-31,75,41,8,22,-68,-14,-26,67,-21,79,-44,50,33,10,13,78,1,34, 25,-43,-2,-54,35,35,-109,32,86,16,-80,37,-36,-17,-43,55,-12,-80,76,44,-10,31,-25,97,3,-59,-1,-22,-57,-15,-37,-28, -58,18,-59,84,-27,-38,-103,-30,75,23,16,26,-90,60,19,-32,38,30,-8,51,-64,99,-6,-48,-13,37,-64,-3,-8,74,77,-20, 
  /* [12][1][][] */ -54,39,-36,-64,23,-5,-51,15,7,80,63,65,17,38,81,-31,27,-11,-29,98,84,67,-80,-29,22,-76,-40,-37,48,3,-29,73, -37,55,0,57,10,24,-41,48,-59,69,-21,-84,-19,71,4,65,-21,-28,13,20,75,3,60,97,51,24,8,-54,77,-13,-4,25, 32,31,-82,10,-40,3,-3,-72,70,32,-57,29,-16,-17,22,-74,82,-48,59,87,-65,3,-73,6,14,-22,74,-54,-50,81,67,-15, 
  /* [12][2][][] */ 0,-54,-25,-74,85,-9,30,-15,9,75,38,83,-67,67,-70,-7,58,44,-5,-48,-4,93,56,74,31,32,7,15,-46,40,91,-87, 15,13,-127,54,-9,33,-37,-72,-48,-41,-60,41,-4,73,-66,45,-59,50,-21,40,98,13,39,11,96,-34,-12,-56,-61,-16,21,60, 0,-61,-74,88,40,-43,-67,10,53,91,35,-19,-46,89,50,-10,28,-36,44,-29,24,13,39,57,61,-6,84,16,-5,1,91,95, 
  /* [13][0][][] */ 12,10,16,61,-72,-59,7,-70,-37,-44,20,-40,86,-13,-58,-63,-40,-19,-21,23,12,-2,85,-33,45,23,34,19,66,-8,45,44, -15,39,62,-54,-18,54,-3,32,88,-76,19,-51,-6,-23,63,10,20,47,1,-51,-17,13,84,-4,45,-19,-42,-14,80,-11,20,-87, -41,34,99,-3,47,60,29,53,-16,-31,-24,80,89,-10,-3,11,-70,-42,-35,-33,47,-71,-55,17,-42,-20,39,23,36,31,8,56, 
  /* [13][1][][] */ 62,-42,91,14,-31,68,-17,30,-1,15,57,0,-18,-19,62,-73,34,-21,64,-16,35,-74,-44,-21,-36,50,41,-13,87,69,-57,25, 39,15,-17,21,-35,2,-52,15,26,-49,53,-22,-5,31,18,-21,-62,89,74,-45,-10,56,72,-6,56,-71,-57,45,54,44,-10,37, 13,-14,8,-20,36,87,80,-62,70,23,-18,-66,83,-97,-54,68,-13,90,74,-73,-1,-69,-5,39,82,-10,-51,73,26,-72,-36,-97, 
  /* [13][2][][] */ 96,-32,73,72,-46,83,61,-1,-28,-1,-47,80,-16,69,113,60,118,127,-6,-30,89,-25,-18,29,-55,35,-21,85,72,38,-5,-50, 110,-68,39,-16,-72,-8,-53,4,29,43,22,-45,32,-44,-29,44,14,69,86,76,86,-22,99,57,-16,49,3,-63,86,71,-37,-33, 5,-67,71,74,50,-58,-18,-24,-25,12,-42,-71,26,-44,-54,-66,-1,115,-39,-33,-28,60,19,-52,13,49,33,74,50,16,1,-83, 
  /* [14][0][][] */ 6,44,58,73,-69,112,-54,-48,83,48,-67,40,105,-5,3,-29,26,31,78,-30,-33,57,30,0,-47,34,51,-32,49,-46,59,45, -63,95,19,2,-33,-17,4,80,98,88,-68,87,-9,-70,37,-3,99,3,18,93,-45,-35,-3,49,76,105,54,-17,87,-73,-44,103, 45,41,85,-1,66,60,-9,-20,47,47,30,73,24,-57,-36,4,121,-95,-6,95,6,40,-44,49,51,52,17,25,16,12,-59,18, 
  /* [14][1][][] */ 47,85,32,-27,59,-29,18,11,103,54,72,38,-12,-39,65,7,-38,32,84,17,-23,82,63,2,0,113,-69,74,31,37,69,62, -89,70,30,-23,24,91,47,37,65,-58,23,19,-41,53,1,-48,58,-103,65,1,1,-36,-19,-13,103,51,10,56,89,-88,69,34, -60,-35,-20,-46,-42,91,-94,55,102,-9,25,-32,108,-63,-77,-15,64,-10,58,-59,-22,39,-17,35,37,61,-100,-48,28,37,49,-37, 
  /* [14][2][][] */ 8,-4,89,102,-47,-30,-86,3,118,-69,-12,-11,25,-50,-58,-21,94,-39,17,-10,19,-73,27,-5,60,-35,38,29,3,20,-66,10, -73,38,47,-39,-85,-1,-78,48,63,-39,50,51,36,-47,-11,-79,45,32,26,-75,-49,-33,87,-52,57,21,-47,36,91,-56,-43,-39, -39,43,57,49,-68,106,11,-1,127,-32,0,-20,97,-32,5,8,8,-67,-30,57,-29,13,-21,33,-72,-34,-81,66,59,3,-76,112, 
  /* [15][0][][] */ 85,22,9,57,-36,-68,-30,-15,-33,16,-6,-75,54,57,71,13,66,-4,19,-72,12,28,-36,24,29,20,26,-61,-26,-23,10,-35, 25,18,2,-29,-17,59,50,76,2,-42,21,-51,-35,75,66,40,-37,26,16,8,74,3,-68,46,104,58,99,-19,44,22,-31,-13, 64,-26,-59,3,-11,72,100,70,55,-70,0,5,40,-14,-41,76,-73,66,-26,7,42,25,31,51,127,-47,3,-13,-16,-63,-49,47, 
  /* [15][1][][] */ -24,-9,72,-10,-42,-77,-32,-63,1,48,38,-58,17,34,75,40,53,76,83,-22,-21,-19,76,-14,39,-51,28,66,64,18,0,-52, 52,57,57,34,-50,-52,-17,-38,-88,6,-10,0,-68,2,23,-38,-77,46,-54,29,27,20,37,-31,70,10,8,85,-20,-36,39,41, -30,-5,32,13,28,-8,24,-95,39,-67,23,-62,-30,19,-66,-14,-58,30,-60,-4,29,-44,28,-19,-16,-12,-53,-39,30,51,-62,41, 
  /* [15][2][][] */ 92,-59,93,37,65,-16,100,77,-90,-24,-24,-56,1,-35,34,30,61,-20,63,-74,71,-34,-36,-37,68,-64,-7,-58,-56,34,-68,-23, 83,51,41,74,17,51,8,36,-67,-73,40,-23,38,-53,-5,41,-65,86,18,-70,13,-9,-39,32,78,16,66,7,83,43,-30,47, 99,-57,75,52,13,-46,-3,12,19,29,63,-28,-58,27,54,74,75,102,-39,39,33,80,65,-40,57,-50,39,-6,-14,-28,-30,-36, 
};
const TfArray<4, int> tensor_dimension7 = { 4, { 16,3,3,32 } };
const TfArray<16, float> quant7_scale = { 16, { 0.0012746844440698624, 0.0013804741902276874, 0.0013990494189783931, 0.0013857528101652861, 0.0014511274639517069, 0.0013337287819013, 0.0013944265665486455, 0.0014982743887230754, 0.001304698409512639, 0.0013923320220783353, 0.0015415953239426017, 0.0014239156153053045, 0.0014300977345556021, 0.0016119350912049413, 0.0015054873656481504, 0.0015432990621775389, } };
const TfArray<16, int> quant7_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const TfArray<4, int> tensor_dimension8 = { 4, { 1,48,48,32 } };
const TfArray<1, float> quant8_scale = { 1, { 0.0070528490468859673, } };
const TfArray<1, int> quant8_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const TfArray<4, int> tensor_dimension9 = { 4, { 1,24,24,32 } };
const TfArray<1, float> quant9_scale = { 1, { 0.0070528490468859673, } };
const TfArray<1, int> quant9_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const TfArray<4, int> tensor_dimension10 = { 4, { 1,24,24,16 } };
const TfArray<1, float> quant10_scale = { 1, { 0.018328070640563965, } };
const TfArray<1, int> quant10_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfArray<4, int> tensor_dimension11 = { 4, { 1,12,12,16 } };
const TfArray<1, float> quant11_scale = { 1, { 0.018328070640563965, } };
const TfArray<1, int> quant11_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const TfArray<2, int> tensor_dimension12 = { 2, { 1,2304 } };
const TfArray<1, float> quant12_scale = { 1, { 0.018328070640563965, } };
const TfArray<1, int> quant12_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant12 = { (TfLiteFloatArray*)&quant12_scale, (TfLiteIntArray*)&quant12_zero, 0 };
const TfArray<2, int> tensor_dimension13 = { 2, { 1,5 } };
const TfArray<1, float> quant13_scale = { 1, { 0.17119954526424408, } };
const TfArray<1, int> quant13_zero = { 1, { 31 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const TfArray<2, int> tensor_dimension14 = { 2, { 1,5 } };
const TfArray<1, float> quant14_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant14_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const TfLiteConvParams opdata0 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs0 = { 3, { 0,6,2 } };
const TfArray<1, int> outputs0 = { 1, { 8 } };
const TfLitePoolParams opdata1 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs1 = { 1, { 8 } };
const TfArray<1, int> outputs1 = { 1, { 9 } };
const TfLiteConvParams opdata2 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs2 = { 3, { 9,7,3 } };
const TfArray<1, int> outputs2 = { 1, { 10 } };
const TfLitePoolParams opdata3 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs3 = { 1, { 10 } };
const TfArray<1, int> outputs3 = { 1, { 11 } };
const TfLiteReshapeParams opdata4 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs4 = { 2, { 11,1 } };
const TfArray<1, int> outputs4 = { 1, { 12 } };
const TfLiteFullyConnectedParams opdata5 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs5 = { 3, { 12,5,4 } };
const TfArray<1, int> outputs5 = { 1, { 13 } };
const TfLiteSoftmaxParams opdata6 = { 1 };
const TfArray<1, int> inputs6 = { 1, { 13 } };
const TfArray<1, int> outputs6 = { 1, { 14 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 73728, (TfLiteIntArray*)&tensor_dimension0, 6912, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 8, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 128, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant2))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant3))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant4))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 11520, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant5))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 864, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data7, (TfLiteIntArray*)&tensor_dimension7, 4608, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant7))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension8, 73728, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 73728, (TfLiteIntArray*)&tensor_dimension9, 18432, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension10, 9216, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 9216, (TfLiteIntArray*)&tensor_dimension11, 2304, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant11))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension12, 2304, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant12))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 2304, (TfLiteIntArray*)&tensor_dimension13, 5, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant13))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension14, 5, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant14))}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs4, (TfLiteIntArray*)&outputs4, const_cast<void*>(static_cast<const void*>(&opdata4)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs5, (TfLiteIntArray*)&outputs5, const_cast<void*>(static_cast<const void*>(&opdata5)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs6, (TfLiteIntArray*)&outputs6, const_cast<void*>(static_cast<const void*>(&opdata6)), OP_SOFTMAX, },
};
static std::vector<void*> overflow_buffers;
static TfLiteStatus AllocatePersistentBuffer(struct TfLiteContext* ctx,
                                                 size_t bytes, void** ptr) {
  if (current_location - bytes < tensor_boundary) {
    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    *ptr = malloc(bytes);
    if (*ptr == NULL) {
      printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return kTfLiteError;
    }
    overflow_buffers.push_back(*ptr);
    return kTfLiteOk;
  }

  current_location -= bytes;

  *ptr = current_location;
  return kTfLiteOk;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static std::vector<scratch_buffer_t> scratch_buffers;

static TfLiteStatus RequestScratchBufferInArena(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  scratch_buffer_t b;
  b.bytes = bytes;

  TfLiteStatus s = AllocatePersistentBuffer(ctx, b.bytes, &b.ptr);
  if (s != kTfLiteOk) {
    return s;
  }

  scratch_buffers.push_back(b);

  *buffer_idx = scratch_buffers.size() - 1;

  return kTfLiteOk;
}

static void* GetScratchBuffer(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > static_cast<int>(scratch_buffers.size()) - 1) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}
} // namespace

  TfLiteStatus trained_model_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;
  ctx.AllocatePersistentBuffer = &AllocatePersistentBuffer;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArena;
  ctx.GetScratchBuffer = &GetScratchBuffer;
  ctx.tensors = tflTensors;
  ctx.tensors_size = 15;
  for(size_t i = 0; i < 15; ++i) {
    tflTensors[i].type = tensorData[i].type;
    tflTensors[i].is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    tflTensors[i].allocation_type = tensorData[i].allocation_type;
#else
    tflTensors[i].allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
    tflTensors[i].bytes = tensorData[i].bytes;
    tflTensors[i].dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    if(tflTensors[i].allocation_type == kTfLiteArenaRw){
      uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

     tflTensors[i].data.data =  start;
    }
    else{
       tflTensors[i].data.data = tensorData[i].data;
    }
#else
    tflTensors[i].data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
    tflTensors[i].quantization = tensorData[i].quantization;
    if (tflTensors[i].quantization.type == kTfLiteAffineQuantization) {
      TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
      tflTensors[i].params.scale = quant->scale->data[0];
      tflTensors[i].params.zero_point = quant->zero_point->data[0];
    }
    if (tflTensors[i].allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tflTensors[i].data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_CONV_2D] = *tflite::ops::micro::Register_CONV_2D();
  registrations[OP_MAX_POOL_2D] = *tflite::ops::micro::Register_MAX_POOL_2D();
  registrations[OP_RESHAPE] = *tflite::ops::micro::Register_RESHAPE();
  registrations[OP_FULLY_CONNECTED] = *tflite::ops::micro::Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = *tflite::ops::micro::Register_SOFTMAX();

  for(size_t i = 0; i < 7; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
    tflNodes[i].custom_initial_data = nullptr;
    tflNodes[i].custom_initial_data_size = 0;
    if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for(size_t i = 0; i < 7; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteTensor* trained_model_input(int index) {
  return &ctx.tensors[inTensorIndices[index]];
}

static const int outTensorIndices[] = {
  14, 
};
TfLiteTensor* trained_model_output(int index) {
  return &ctx.tensors[outTensorIndices[index]];
}

TfLiteStatus trained_model_invoke() {
  for(size_t i = 0; i < 7; ++i) {
    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus trained_model_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif
  scratch_buffers.clear();
  for (size_t ix = 0; ix < overflow_buffers.size(); ix++) {
    free(overflow_buffers[ix]);
  }
  overflow_buffers.clear();
  return kTfLiteOk;
}
